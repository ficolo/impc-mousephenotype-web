{"ast":null,"code":"import _pt from \"prop-types\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport cx from 'classnames';\nimport { symbol, symbolTriangle } from 'd3-shape';\nimport Glyph from './Glyph';\nexport default function GlyphTriangle(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      top = _ref.top,\n      left = _ref.left,\n      size = _ref.size,\n      restProps = _objectWithoutPropertiesLoose(_ref, [\"children\", \"className\", \"top\", \"left\", \"size\"]);\n\n  var path = symbol();\n  path.type(symbolTriangle); // TS can't differentiate the method overload here\n\n  if (typeof size === 'number') path.size(size);else if (size) path.size(size);\n  if (children) return /*#__PURE__*/React.createElement(React.Fragment, null, children({\n    path: path\n  }));\n  return /*#__PURE__*/React.createElement(Glyph, {\n    top: top,\n    left: left\n  }, /*#__PURE__*/React.createElement(\"path\", _extends({\n    className: cx('visx-glyph-triangle', className),\n    d: path() || ''\n  }, restProps)));\n}\nGlyphTriangle.propTypes = {\n  children: _pt.func,\n  className: _pt.string,\n  top: _pt.number,\n  left: _pt.number,\n  size: _pt.oneOfType([_pt.number, _pt.func])\n};","map":{"version":3,"sources":["/Users/federico/git/test/impc-mousephenotype-web/node_modules/@visx/glyph/esm/glyphs/GlyphTriangle.js"],"names":["_pt","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","cx","symbol","symbolTriangle","Glyph","GlyphTriangle","_ref","children","className","top","left","size","restProps","path","type","createElement","Fragment","d","propTypes","func","string","number","oneOfType"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport cx from 'classnames';\nimport { symbol, symbolTriangle } from 'd3-shape';\nimport Glyph from './Glyph';\nexport default function GlyphTriangle(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      top = _ref.top,\n      left = _ref.left,\n      size = _ref.size,\n      restProps = _objectWithoutPropertiesLoose(_ref, [\"children\", \"className\", \"top\", \"left\", \"size\"]);\n\n  var path = symbol();\n  path.type(symbolTriangle); // TS can't differentiate the method overload here\n\n  if (typeof size === 'number') path.size(size);else if (size) path.size(size);\n  if (children) return /*#__PURE__*/React.createElement(React.Fragment, null, children({\n    path: path\n  }));\n  return /*#__PURE__*/React.createElement(Glyph, {\n    top: top,\n    left: left\n  }, /*#__PURE__*/React.createElement(\"path\", _extends({\n    className: cx('visx-glyph-triangle', className),\n    d: path() || ''\n  }, restProps)));\n}\nGlyphTriangle.propTypes = {\n  children: _pt.func,\n  className: _pt.string,\n  top: _pt.number,\n  left: _pt.number,\n  size: _pt.oneOfType([_pt.number, _pt.func])\n};"]},"metadata":{},"sourceType":"module"}