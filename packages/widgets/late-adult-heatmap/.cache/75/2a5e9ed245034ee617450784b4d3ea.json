{"id":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","dependencies":[{"name":"/Users/federico/git/test/impc-mousephenotype-web/packages/widgets/late-adult-heatmap/package.json","includedInParent":true,"mtime":1614272583558},{"name":"/Users/federico/git/test/impc-mousephenotype-web/node_modules/@visx/mock-data/package.json","includedInParent":true,"mtime":1613568471488},{"name":"d3-random","loc":{"line":6,"column":24},"parent":"/Users/federico/git/test/impc-mousephenotype-web/node_modules/@visx/mock-data/lib/generators/genStats.js","resolved":"/Users/federico/git/test/impc-mousephenotype-web/node_modules/d3-random/src/index.js"}],"generated":{"js":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = genStats;\n\nvar _d3Random = require(\"d3-random\");\n\nvar defaultRandom = (0, _d3Random.randomNormal)(4, 3);\n\nvar defaultRandomOffset = function defaultRandomOffset() {\n  return Math.random() * 10;\n};\n\nvar sampleSize = 1000;\n\nfunction genStats(\n/** Number of stat distributions to generate. */\nnumber,\n/** Function which generates a random number. */\nrandom,\n/** Function which generates an offset for each data point / invocation of random. */\nrandomOffset) {\n  if (random === void 0) {\n    random = defaultRandom;\n  }\n\n  if (randomOffset === void 0) {\n    randomOffset = defaultRandomOffset;\n  }\n\n  var data = [];\n\n  var _loop = function _loop(i) {\n    var points = [];\n    var offset = randomOffset();\n\n    for (var j = 0; j < sampleSize; j += 1) {\n      points.push(offset + random());\n    }\n\n    points.sort(function (a, b) {\n      return a - b;\n    });\n    var firstQuartile = points[Math.round(sampleSize / 4)];\n    var thirdQuartile = points[Math.round(3 * sampleSize / 4)];\n    var IQR = thirdQuartile - firstQuartile;\n    var min = firstQuartile - 1.5 * IQR;\n    var max = thirdQuartile + 1.5 * IQR;\n    var outliers = points.filter(function (p) {\n      return p < min || p > max;\n    });\n    var binWidth = 2 * IQR * Math.pow(sampleSize - outliers.length, -1 / 3);\n    var binNum = Math.round((max - min) / binWidth);\n    var actualBinWidth = (max - min) / binNum;\n    var bins = new Array(binNum + 2).fill(0);\n    var values = new Array(binNum + 2).fill(min);\n\n    for (var ii = 1; ii <= binNum; ii += 1) {\n      values[ii] += actualBinWidth * (ii - 0.5);\n    }\n\n    values[values.length - 1] = max;\n    points.filter(function (p) {\n      return p >= min && p <= max;\n    }).forEach(function (p) {\n      bins[Math.floor((p - min) / actualBinWidth) + 1] += 1;\n    });\n    var binData = values.map(function (v, index) {\n      return {\n        value: v,\n        count: bins[index]\n      };\n    });\n    var boxPlot = {\n      x: \"Statistics \" + i,\n      min: min,\n      firstQuartile: firstQuartile,\n      median: points[Math.round(sampleSize / 2)],\n      thirdQuartile: thirdQuartile,\n      max: max,\n      outliers: outliers\n    };\n    data.push({\n      boxPlot: boxPlot,\n      binData: binData\n    });\n  };\n\n  for (var i = 0; i < number; i += 1) {\n    _loop(i);\n  }\n\n  return data;\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}}],"sources":{"../../../../node_modules/@visx/mock-data/lib/generators/genStats.js":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = genStats;\n\nvar _d3Random = require(\"d3-random\");\n\nvar defaultRandom = (0, _d3Random.randomNormal)(4, 3);\n\nvar defaultRandomOffset = function defaultRandomOffset() {\n  return Math.random() * 10;\n};\n\nvar sampleSize = 1000;\n\nfunction genStats(\n/** Number of stat distributions to generate. */\nnumber,\n/** Function which generates a random number. */\nrandom,\n/** Function which generates an offset for each data point / invocation of random. */\nrandomOffset) {\n  if (random === void 0) {\n    random = defaultRandom;\n  }\n\n  if (randomOffset === void 0) {\n    randomOffset = defaultRandomOffset;\n  }\n\n  var data = [];\n\n  var _loop = function _loop(i) {\n    var points = [];\n    var offset = randomOffset();\n\n    for (var j = 0; j < sampleSize; j += 1) {\n      points.push(offset + random());\n    }\n\n    points.sort(function (a, b) {\n      return a - b;\n    });\n    var firstQuartile = points[Math.round(sampleSize / 4)];\n    var thirdQuartile = points[Math.round(3 * sampleSize / 4)];\n    var IQR = thirdQuartile - firstQuartile;\n    var min = firstQuartile - 1.5 * IQR;\n    var max = thirdQuartile + 1.5 * IQR;\n    var outliers = points.filter(function (p) {\n      return p < min || p > max;\n    });\n    var binWidth = 2 * IQR * Math.pow(sampleSize - outliers.length, -1 / 3);\n    var binNum = Math.round((max - min) / binWidth);\n    var actualBinWidth = (max - min) / binNum;\n    var bins = new Array(binNum + 2).fill(0);\n    var values = new Array(binNum + 2).fill(min);\n\n    for (var ii = 1; ii <= binNum; ii += 1) {\n      values[ii] += actualBinWidth * (ii - 0.5);\n    }\n\n    values[values.length - 1] = max;\n    points.filter(function (p) {\n      return p >= min && p <= max;\n    }).forEach(function (p) {\n      bins[Math.floor((p - min) / actualBinWidth) + 1] += 1;\n    });\n    var binData = values.map(function (v, index) {\n      return {\n        value: v,\n        count: bins[index]\n      };\n    });\n    var boxPlot = {\n      x: \"Statistics \" + i,\n      min: min,\n      firstQuartile: firstQuartile,\n      median: points[Math.round(sampleSize / 2)],\n      thirdQuartile: thirdQuartile,\n      max: max,\n      outliers: outliers\n    };\n    data.push({\n      boxPlot: boxPlot,\n      binData: binData\n    });\n  };\n\n  for (var i = 0; i < number; i += 1) {\n    _loop(i);\n  }\n\n  return data;\n}"},"lineCount":94}},"error":null,"hash":"990a85db47c794fa2f4d1270292568a9","cacheData":{"env":{}}}