{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(faQuestionCircle);\nexport var PhenotypingExperimentInfobox = function (_a) {\n  var lifeStage = _a.lifeStage,\n      phenotypeId = _a.phenotypeId,\n      phenotypeName = _a.phenotypeName,\n      pipelineKey = _a.pipelineKey,\n      procedureKey = _a.procedureKey,\n      procedureName = _a.procedureName,\n      parameterKey = _a.parameterKey,\n      parameterName = _a.parameterName,\n      strainName = _a.strainName,\n      phenotypingCenter = _a.phenotypingCenter;\n  return _jsx(\"table\", __assign({\n    className: \"table table-striped\"\n  }, {\n    children: _jsxs(\"tbody\", {\n      children: [_jsxs(\"tr\", {\n        children: [_jsx(\"td\", {\n          children: \"Life stage\"\n        }, void 0), _jsxs(\"td\", __assign({\n          className: \"font-weight-bold\"\n        }, {\n          children: [lifeStage + \" \", _jsx(\"a\", __assign({\n            href: process.env.REACT_APP_BASE_URL + \"/help/standardized-mouse-phenotyping/pipelines/late-adult-and-interval-pipelines/\",\n            target: \"_blank\",\n            rel: \"noreferrer\"\n          }, {\n            children: _jsx(FontAwesomeIcon, {\n              icon: \"question-circle\"\n            }, void 0)\n          }), void 0)]\n        }), void 0)]\n      }, void 0), _jsxs(\"tr\", {\n        children: [_jsx(\"td\", {\n          children: \"Associated Phenotype\"\n        }, void 0), _jsx(\"td\", {\n          children: _jsx(\"div\", {\n            children: _jsx(\"a\", __assign({\n              className: \"font-weight-bold\",\n              href: process.env.REACT_APP_BASE_URL + \"/data/phenotypes/\" + phenotypeId\n            }, {\n              children: phenotypeName\n            }), void 0)\n          }, void 0)\n        }, void 0)]\n      }, void 0), _jsxs(\"tr\", {\n        children: [_jsx(\"td\", {\n          children: \"Testing protocol\"\n        }, void 0), _jsx(\"td\", {\n          children: _jsx(\"a\", __assign({\n            className: \"font-weight-bold\",\n            href: process.env.REACT_APP_BASE_URL + \"/impress/ProcedureInfo?action=list&amp;procID=\" + procedureKey + \"&amp;pipeID=\" + pipelineKey\n          }, {\n            children: procedureName\n          }), void 0)\n        }, void 0)]\n      }, void 0), _jsxs(\"tr\", {\n        children: [_jsx(\"td\", {\n          children: \"Measured value\"\n        }, void 0), _jsx(\"td\", {\n          children: _jsx(\"a\", __assign({\n            className: \"font-weight-bold\",\n            href: process.env.REACT_APP_BASE_URL + \"/impress/OntologyInfo?action=list&amp;procID=\" + procedureKey + \"#\" + parameterKey\n          }, {\n            children: parameterName\n          }), void 0)\n        }, void 0)]\n      }, void 0), _jsxs(\"tr\", {\n        children: [_jsx(\"td\", {\n          children: \"Testing environment\"\n        }, void 0), _jsx(\"td\", {\n          children: _jsx(\"a\", __assign({\n            className: \"font-weight-bold w-100\",\n            \"data-toggle\": \"modal\",\n            \"data-target\": \"#conditions\",\n            href: \"#1\"\n          }, {\n            children: \"Lab conditions and equipment\"\n          }), void 0)\n        }, void 0)]\n      }, void 0), _jsxs(\"tr\", {\n        children: [_jsx(\"td\", {\n          children: \"Background Strain\"\n        }, void 0), _jsx(\"td\", __assign({\n          className: \"font-weight-bold\"\n        }, {\n          children: strainName\n        }), void 0)]\n      }, void 0), _jsxs(\"tr\", {\n        children: [_jsx(\"td\", {\n          children: \"Phenotyping center\"\n        }, void 0), _jsx(\"td\", __assign({\n          className: \"font-weight-bold\"\n        }, {\n          children: phenotypingCenter\n        }), void 0)]\n      }, void 0)]\n    }, void 0)\n  }), void 0);\n};","map":{"version":3,"sources":["../../src/metadata/PhenotypingExperimentInfobox.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faQuestionCircle } from \"@fortawesome/free-solid-svg-icons\";\nlibrary.add(faQuestionCircle);\nexport var PhenotypingExperimentInfobox = function (_a) {\n    var lifeStage = _a.lifeStage, phenotypeId = _a.phenotypeId, phenotypeName = _a.phenotypeName, pipelineKey = _a.pipelineKey, procedureKey = _a.procedureKey, procedureName = _a.procedureName, parameterKey = _a.parameterKey, parameterName = _a.parameterName, strainName = _a.strainName, phenotypingCenter = _a.phenotypingCenter;\n    return (_jsx(\"table\", __assign({ className: \"table table-striped\" }, { children: _jsxs(\"tbody\", { children: [_jsxs(\"tr\", { children: [_jsx(\"td\", { children: \"Life stage\" }, void 0),\n                        _jsxs(\"td\", __assign({ className: \"font-weight-bold\" }, { children: [lifeStage + \" \",\n                                _jsx(\"a\", __assign({ href: process.env.REACT_APP_BASE_URL + \"/help/standardized-mouse-phenotyping/pipelines/late-adult-and-interval-pipelines/\", target: \"_blank\", rel: \"noreferrer\" }, { children: _jsx(FontAwesomeIcon, { icon: \"question-circle\" }, void 0) }), void 0)] }), void 0)] }, void 0),\n                _jsxs(\"tr\", { children: [_jsx(\"td\", { children: \"Associated Phenotype\" }, void 0),\n                        _jsx(\"td\", { children: _jsx(\"div\", { children: _jsx(\"a\", __assign({ className: \"font-weight-bold\", href: process.env.REACT_APP_BASE_URL + \"/data/phenotypes/\" + phenotypeId }, { children: phenotypeName }), void 0) }, void 0) }, void 0)] }, void 0),\n                _jsxs(\"tr\", { children: [_jsx(\"td\", { children: \"Testing protocol\" }, void 0),\n                        _jsx(\"td\", { children: _jsx(\"a\", __assign({ className: \"font-weight-bold\", href: process.env.REACT_APP_BASE_URL + \"/impress/ProcedureInfo?action=list&amp;procID=\" + procedureKey + \"&amp;pipeID=\" + pipelineKey }, { children: procedureName }), void 0) }, void 0)] }, void 0),\n                _jsxs(\"tr\", { children: [_jsx(\"td\", { children: \"Measured value\" }, void 0),\n                        _jsx(\"td\", { children: _jsx(\"a\", __assign({ className: \"font-weight-bold\", href: process.env.REACT_APP_BASE_URL + \"/impress/OntologyInfo?action=list&amp;procID=\" + procedureKey + \"#\" + parameterKey }, { children: parameterName }), void 0) }, void 0)] }, void 0),\n                _jsxs(\"tr\", { children: [_jsx(\"td\", { children: \"Testing environment\" }, void 0),\n                        _jsx(\"td\", { children: _jsx(\"a\", __assign({ className: \"font-weight-bold w-100\", \"data-toggle\": \"modal\", \"data-target\": \"#conditions\", href: \"#1\" }, { children: \"Lab conditions and equipment\" }), void 0) }, void 0)] }, void 0),\n                _jsxs(\"tr\", { children: [_jsx(\"td\", { children: \"Background Strain\" }, void 0),\n                        _jsx(\"td\", __assign({ className: \"font-weight-bold\" }, { children: strainName }), void 0)] }, void 0),\n                _jsxs(\"tr\", { children: [_jsx(\"td\", { children: \"Phenotyping center\" }, void 0),\n                        _jsx(\"td\", __assign({ className: \"font-weight-bold\" }, { children: phenotypingCenter }), void 0)] }, void 0)] }, void 0) }), void 0));\n};\n//# sourceMappingURL=PhenotypingExperimentInfobox.js.map"]},"metadata":{},"sourceType":"module"}