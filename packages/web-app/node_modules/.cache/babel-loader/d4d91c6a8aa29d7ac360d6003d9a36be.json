{"ast":null,"code":"import _pt from \"prop-types\";\nimport React from 'react';\nimport cx from 'classnames';\nimport Pattern from './Pattern';\nimport { PatternOrientation } from '../constants';\nexport function pathForOrientation(_ref) {\n  var height = _ref.height,\n      orientation = _ref.orientation;\n\n  switch (orientation) {\n    case PatternOrientation.horizontal:\n      return \"M 0,\" + height / 2 + \" l \" + height + \",0\";\n\n    case PatternOrientation.diagonal:\n      return \"M 0,\" + height + \" l \" + height + \",\" + -height + \" M \" + -height / 4 + \",\" + height / 4 + \" l \" + height / 2 + \",\" + -height / 2 + \"\\n             M \" + 3 / 4 * height + \",\" + 5 / 4 * height + \" l \" + height / 2 + \",\" + -height / 2;\n\n    case PatternOrientation.diagonalRightToLeft:\n      return \"M 0,0 l \" + height + \",\" + height + \"\\n        M \" + -height / 4 + \",\" + 3 / 4 * height + \" l \" + height / 2 + \",\" + height / 2 + \"\\n        M \" + 3 / 4 * height + \",\" + -height / 4 + \" l \" + height / 2 + \",\" + height / 2;\n\n    case PatternOrientation.vertical:\n    default:\n      return \"M \" + height / 2 + \", 0 l 0, \" + height;\n  }\n}\nexport default function Lines(_ref2) {\n  var id = _ref2.id,\n      width = _ref2.width,\n      height = _ref2.height,\n      stroke = _ref2.stroke,\n      strokeWidth = _ref2.strokeWidth,\n      strokeDasharray = _ref2.strokeDasharray,\n      _ref2$strokeLinecap = _ref2.strokeLinecap,\n      strokeLinecap = _ref2$strokeLinecap === void 0 ? 'square' : _ref2$strokeLinecap,\n      _ref2$shapeRendering = _ref2.shapeRendering,\n      shapeRendering = _ref2$shapeRendering === void 0 ? 'auto' : _ref2$shapeRendering,\n      _ref2$orientation = _ref2.orientation,\n      orientation = _ref2$orientation === void 0 ? ['vertical'] : _ref2$orientation,\n      background = _ref2.background,\n      className = _ref2.className;\n  var orientations = Array.isArray(orientation) ? orientation : [orientation];\n  return /*#__PURE__*/React.createElement(Pattern, {\n    id: id,\n    width: width,\n    height: height\n  }, !!background && /*#__PURE__*/React.createElement(\"rect\", {\n    className: cx('visx-pattern-line-background'),\n    width: width,\n    height: height,\n    fill: background\n  }), orientations.map(function (o, i) {\n    return /*#__PURE__*/React.createElement(\"path\", {\n      key: \"visx-\" + id + \"-line-\" + o + \"-\" + i,\n      className: cx('visx-pattern-line', className),\n      d: pathForOrientation({\n        orientation: o,\n        height: height\n      }),\n      stroke: stroke,\n      strokeWidth: strokeWidth,\n      strokeDasharray: strokeDasharray,\n      strokeLinecap: strokeLinecap,\n      shapeRendering: shapeRendering\n    });\n  }));\n}\nLines.propTypes = {\n  id: _pt.string.isRequired,\n  width: _pt.number.isRequired,\n  height: _pt.number.isRequired,\n  className: _pt.string,\n  background: _pt.string,\n  stroke: _pt.string,\n  strokeWidth: _pt.oneOfType([_pt.number, _pt.string]),\n  strokeDasharray: _pt.oneOfType([_pt.string, _pt.number]),\n  strokeLinecap: _pt.oneOf(['square', 'butt', 'round', 'inherit']),\n  shapeRendering: _pt.oneOfType([_pt.string, _pt.number]),\n  orientation: _pt.array\n};","map":{"version":3,"sources":["/Users/federico/git/test/impc-mousephenotype-web/node_modules/@visx/pattern/esm/patterns/Lines.js"],"names":["_pt","React","cx","Pattern","PatternOrientation","pathForOrientation","_ref","height","orientation","horizontal","diagonal","diagonalRightToLeft","vertical","Lines","_ref2","id","width","stroke","strokeWidth","strokeDasharray","_ref2$strokeLinecap","strokeLinecap","_ref2$shapeRendering","shapeRendering","_ref2$orientation","background","className","orientations","Array","isArray","createElement","fill","map","o","i","key","d","propTypes","string","isRequired","number","oneOfType","oneOf","array"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\nimport React from 'react';\nimport cx from 'classnames';\nimport Pattern from './Pattern';\nimport { PatternOrientation } from '../constants';\nexport function pathForOrientation(_ref) {\n  var height = _ref.height,\n      orientation = _ref.orientation;\n\n  switch (orientation) {\n    case PatternOrientation.horizontal:\n      return \"M 0,\" + height / 2 + \" l \" + height + \",0\";\n\n    case PatternOrientation.diagonal:\n      return \"M 0,\" + height + \" l \" + height + \",\" + -height + \" M \" + -height / 4 + \",\" + height / 4 + \" l \" + height / 2 + \",\" + -height / 2 + \"\\n             M \" + 3 / 4 * height + \",\" + 5 / 4 * height + \" l \" + height / 2 + \",\" + -height / 2;\n\n    case PatternOrientation.diagonalRightToLeft:\n      return \"M 0,0 l \" + height + \",\" + height + \"\\n        M \" + -height / 4 + \",\" + 3 / 4 * height + \" l \" + height / 2 + \",\" + height / 2 + \"\\n        M \" + 3 / 4 * height + \",\" + -height / 4 + \" l \" + height / 2 + \",\" + height / 2;\n\n    case PatternOrientation.vertical:\n    default:\n      return \"M \" + height / 2 + \", 0 l 0, \" + height;\n  }\n}\nexport default function Lines(_ref2) {\n  var id = _ref2.id,\n      width = _ref2.width,\n      height = _ref2.height,\n      stroke = _ref2.stroke,\n      strokeWidth = _ref2.strokeWidth,\n      strokeDasharray = _ref2.strokeDasharray,\n      _ref2$strokeLinecap = _ref2.strokeLinecap,\n      strokeLinecap = _ref2$strokeLinecap === void 0 ? 'square' : _ref2$strokeLinecap,\n      _ref2$shapeRendering = _ref2.shapeRendering,\n      shapeRendering = _ref2$shapeRendering === void 0 ? 'auto' : _ref2$shapeRendering,\n      _ref2$orientation = _ref2.orientation,\n      orientation = _ref2$orientation === void 0 ? ['vertical'] : _ref2$orientation,\n      background = _ref2.background,\n      className = _ref2.className;\n  var orientations = Array.isArray(orientation) ? orientation : [orientation];\n  return /*#__PURE__*/React.createElement(Pattern, {\n    id: id,\n    width: width,\n    height: height\n  }, !!background && /*#__PURE__*/React.createElement(\"rect\", {\n    className: cx('visx-pattern-line-background'),\n    width: width,\n    height: height,\n    fill: background\n  }), orientations.map(function (o, i) {\n    return /*#__PURE__*/React.createElement(\"path\", {\n      key: \"visx-\" + id + \"-line-\" + o + \"-\" + i,\n      className: cx('visx-pattern-line', className),\n      d: pathForOrientation({\n        orientation: o,\n        height: height\n      }),\n      stroke: stroke,\n      strokeWidth: strokeWidth,\n      strokeDasharray: strokeDasharray,\n      strokeLinecap: strokeLinecap,\n      shapeRendering: shapeRendering\n    });\n  }));\n}\nLines.propTypes = {\n  id: _pt.string.isRequired,\n  width: _pt.number.isRequired,\n  height: _pt.number.isRequired,\n  className: _pt.string,\n  background: _pt.string,\n  stroke: _pt.string,\n  strokeWidth: _pt.oneOfType([_pt.number, _pt.string]),\n  strokeDasharray: _pt.oneOfType([_pt.string, _pt.number]),\n  strokeLinecap: _pt.oneOf(['square', 'butt', 'round', 'inherit']),\n  shapeRendering: _pt.oneOfType([_pt.string, _pt.number]),\n  orientation: _pt.array\n};"]},"metadata":{},"sourceType":"module"}