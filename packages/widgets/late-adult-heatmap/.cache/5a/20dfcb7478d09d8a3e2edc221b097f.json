{"id":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","dependencies":[{"name":"/Users/federico/git/test/impc-mousephenotype-web/packages/widgets/late-adult-heatmap/package.json","includedInParent":true,"mtime":1614274589962},{"name":"/Users/federico/git/test/impc-mousephenotype-web/node_modules/d3-interpolate-path/package.json","includedInParent":true,"mtime":1611659386315}],"generated":{"js":"var define;\nvar global = arguments[3];\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, (function (exports) { 'use strict';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = o[Symbol.iterator]();\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (e) {\n      didErr = true;\n      err = e;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\n/**\n * de Casteljau's algorithm for drawing and splitting bezier curves.\n * Inspired by https://pomax.github.io/bezierinfo/\n *\n * @param {Number[][]} points Array of [x,y] points: [start, control1, control2, ..., end]\n *   The original segment to split.\n * @param {Number} t Where to split the curve (value between [0, 1])\n * @return {Object} An object { left, right } where left is the segment from 0..t and\n *   right is the segment from t..1.\n */\nfunction decasteljau(points, t) {\n  var left = [];\n  var right = [];\n\n  function decasteljauRecurse(points, t) {\n    if (points.length === 1) {\n      left.push(points[0]);\n      right.push(points[0]);\n    } else {\n      var newPoints = Array(points.length - 1);\n\n      for (var i = 0; i < newPoints.length; i++) {\n        if (i === 0) {\n          left.push(points[0]);\n        }\n\n        if (i === newPoints.length - 1) {\n          right.push(points[i + 1]);\n        }\n\n        newPoints[i] = [(1 - t) * points[i][0] + t * points[i + 1][0], (1 - t) * points[i][1] + t * points[i + 1][1]];\n      }\n\n      decasteljauRecurse(newPoints, t);\n    }\n  }\n\n  if (points.length) {\n    decasteljauRecurse(points, t);\n  }\n\n  return {\n    left: left,\n    right: right.reverse()\n  };\n}\n/**\n * Convert segments represented as points back into a command object\n *\n * @param {Number[][]} points Array of [x,y] points: [start, control1, control2, ..., end]\n *   Represents a segment\n * @return {Object} A command object representing the segment.\n */\n\n\nfunction pointsToCommand(points) {\n  var command = {};\n\n  if (points.length === 4) {\n    command.x2 = points[2][0];\n    command.y2 = points[2][1];\n  }\n\n  if (points.length >= 3) {\n    command.x1 = points[1][0];\n    command.y1 = points[1][1];\n  }\n\n  command.x = points[points.length - 1][0];\n  command.y = points[points.length - 1][1];\n\n  if (points.length === 4) {\n    // start, control1, control2, end\n    command.type = 'C';\n  } else if (points.length === 3) {\n    // start, control, end\n    command.type = 'Q';\n  } else {\n    // start, end\n    command.type = 'L';\n  }\n\n  return command;\n}\n/**\n * Runs de Casteljau's algorithm enough times to produce the desired number of segments.\n *\n * @param {Number[][]} points Array of [x,y] points for de Casteljau (the initial segment to split)\n * @param {Number} segmentCount Number of segments to split the original into\n * @return {Number[][][]} Array of segments\n */\n\n\nfunction splitCurveAsPoints(points, segmentCount) {\n  segmentCount = segmentCount || 2;\n  var segments = [];\n  var remainingCurve = points;\n  var tIncrement = 1 / segmentCount; // x-----x-----x-----x\n  // t=  0.33   0.66   1\n  // x-----o-----------x\n  // r=  0.33\n  //       x-----o-----x\n  // r=         0.5  (0.33 / (1 - 0.33))  === tIncrement / (1 - (tIncrement * (i - 1))\n  // x-----x-----x-----x----x\n  // t=  0.25   0.5   0.75  1\n  // x-----o----------------x\n  // r=  0.25\n  //       x-----o----------x\n  // r=         0.33  (0.25 / (1 - 0.25))\n  //             x-----o----x\n  // r=         0.5  (0.25 / (1 - 0.5))\n\n  for (var i = 0; i < segmentCount - 1; i++) {\n    var tRelative = tIncrement / (1 - tIncrement * i);\n    var split = decasteljau(remainingCurve, tRelative);\n    segments.push(split.left);\n    remainingCurve = split.right;\n  } // last segment is just to the end from the last point\n\n\n  segments.push(remainingCurve);\n  return segments;\n}\n/**\n * Convert command objects to arrays of points, run de Casteljau's algorithm on it\n * to split into to the desired number of segments.\n *\n * @param {Object} commandStart The start command object\n * @param {Object} commandEnd The end command object\n * @param {Number} segmentCount The number of segments to create\n * @return {Object[]} An array of commands representing the segments in sequence\n */\n\n\nfunction splitCurve(commandStart, commandEnd, segmentCount) {\n  var points = [[commandStart.x, commandStart.y]];\n\n  if (commandEnd.x1 != null) {\n    points.push([commandEnd.x1, commandEnd.y1]);\n  }\n\n  if (commandEnd.x2 != null) {\n    points.push([commandEnd.x2, commandEnd.y2]);\n  }\n\n  points.push([commandEnd.x, commandEnd.y]);\n  return splitCurveAsPoints(points, segmentCount).map(pointsToCommand);\n}\n\nvar commandTokenRegex = /[MLCSTQAHVZmlcstqahv]|-?[\\d.e+-]+/g;\n/**\n * List of params for each command type in a path `d` attribute\n */\n\nvar typeMap = {\n  M: ['x', 'y'],\n  L: ['x', 'y'],\n  H: ['x'],\n  V: ['y'],\n  C: ['x1', 'y1', 'x2', 'y2', 'x', 'y'],\n  S: ['x2', 'y2', 'x', 'y'],\n  Q: ['x1', 'y1', 'x', 'y'],\n  T: ['x', 'y'],\n  A: ['rx', 'ry', 'xAxisRotation', 'largeArcFlag', 'sweepFlag', 'x', 'y'],\n  Z: []\n}; // Add lower case entries too matching uppercase (e.g. 'm' == 'M')\n\nObject.keys(typeMap).forEach(function (key) {\n  typeMap[key.toLowerCase()] = typeMap[key];\n});\n\nfunction arrayOfLength(length, value) {\n  var array = Array(length);\n\n  for (var i = 0; i < length; i++) {\n    array[i] = value;\n  }\n\n  return array;\n}\n/**\n * Converts a command object to a string to be used in a `d` attribute\n * @param {Object} command A command object\n * @return {String} The string for the `d` attribute\n */\n\n\nfunction commandToString(command) {\n  return \"\".concat(command.type).concat(typeMap[command.type].map(function (p) {\n    return command[p];\n  }).join(','));\n}\n/**\n * Converts command A to have the same type as command B.\n *\n * e.g., L0,5 -> C0,5,0,5,0,5\n *\n * Uses these rules:\n * x1 <- x\n * x2 <- x\n * y1 <- y\n * y2 <- y\n * rx <- 0\n * ry <- 0\n * xAxisRotation <- read from B\n * largeArcFlag <- read from B\n * sweepflag <- read from B\n *\n * @param {Object} aCommand Command object from path `d` attribute\n * @param {Object} bCommand Command object from path `d` attribute to match against\n * @return {Object} aCommand converted to type of bCommand\n */\n\n\nfunction convertToSameType(aCommand, bCommand) {\n  var conversionMap = {\n    x1: 'x',\n    y1: 'y',\n    x2: 'x',\n    y2: 'y'\n  };\n  var readFromBKeys = ['xAxisRotation', 'largeArcFlag', 'sweepFlag']; // convert (but ignore M types)\n\n  if (aCommand.type !== bCommand.type && bCommand.type.toUpperCase() !== 'M') {\n    var aConverted = {};\n    Object.keys(bCommand).forEach(function (bKey) {\n      var bValue = bCommand[bKey]; // first read from the A command\n\n      var aValue = aCommand[bKey]; // if it is one of these values, read from B no matter what\n\n      if (aValue === undefined) {\n        if (readFromBKeys.includes(bKey)) {\n          aValue = bValue;\n        } else {\n          // if it wasn't in the A command, see if an equivalent was\n          if (aValue === undefined && conversionMap[bKey]) {\n            aValue = aCommand[conversionMap[bKey]];\n          } // if it doesn't have a converted value, use 0\n\n\n          if (aValue === undefined) {\n            aValue = 0;\n          }\n        }\n      }\n\n      aConverted[bKey] = aValue;\n    }); // update the type to match B\n\n    aConverted.type = bCommand.type;\n    aCommand = aConverted;\n  }\n\n  return aCommand;\n}\n/**\n * Interpolate between command objects commandStart and commandEnd segmentCount times.\n * If the types are L, Q, or C then the curves are split as per de Casteljau's algorithm.\n * Otherwise we just copy commandStart segmentCount - 1 times, finally ending with commandEnd.\n *\n * @param {Object} commandStart Command object at the beginning of the segment\n * @param {Object} commandEnd Command object at the end of the segment\n * @param {Number} segmentCount The number of segments to split this into. If only 1\n *   Then [commandEnd] is returned.\n * @return {Object[]} Array of ~segmentCount command objects between commandStart and\n *   commandEnd. (Can be segmentCount+1 objects if commandStart is type M).\n */\n\n\nfunction splitSegment(commandStart, commandEnd, segmentCount) {\n  var segments = []; // line, quadratic bezier, or cubic bezier\n\n  if (commandEnd.type === 'L' || commandEnd.type === 'Q' || commandEnd.type === 'C') {\n    segments = segments.concat(splitCurve(commandStart, commandEnd, segmentCount)); // general case - just copy the same point\n  } else {\n    var copyCommand = _extends({}, commandStart); // convert M to L\n\n\n    if (copyCommand.type === 'M') {\n      copyCommand.type = 'L';\n    }\n\n    segments = segments.concat(arrayOfLength(segmentCount - 1).map(function () {\n      return copyCommand;\n    }));\n    segments.push(commandEnd);\n  }\n\n  return segments;\n}\n/**\n * Extends an array of commandsToExtend to the length of the referenceCommands by\n * splitting segments until the number of commands match. Ensures all the actual\n * points of commandsToExtend are in the extended array.\n *\n * @param {Object[]} commandsToExtend The command object array to extend\n * @param {Object[]} referenceCommands The command object array to match in length\n * @param {Function} excludeSegment a function that takes a start command object and\n *   end command object and returns true if the segment should be excluded from splitting.\n * @return {Object[]} The extended commandsToExtend array\n */\n\n\nfunction extend(commandsToExtend, referenceCommands, excludeSegment) {\n  // compute insertion points:\n  // number of segments in the path to extend\n  var numSegmentsToExtend = commandsToExtend.length - 1; // number of segments in the reference path.\n\n  var numReferenceSegments = referenceCommands.length - 1; // this value is always between [0, 1].\n\n  var segmentRatio = numSegmentsToExtend / numReferenceSegments; // create a map, mapping segments in referenceCommands to how many points\n  // should be added in that segment (should always be >= 1 since we need each\n  // point itself).\n  // 0 = segment 0-1, 1 = segment 1-2, n-1 = last vertex\n\n  var countPointsPerSegment = arrayOfLength(numReferenceSegments).reduce(function (accum, d, i) {\n    var insertIndex = Math.floor(segmentRatio * i); // handle excluding segments\n\n    if (excludeSegment && insertIndex < commandsToExtend.length - 1 && excludeSegment(commandsToExtend[insertIndex], commandsToExtend[insertIndex + 1])) {\n      // set the insertIndex to the segment that this point should be added to:\n      // round the insertIndex essentially so we split half and half on\n      // neighbouring segments. hence the segmentRatio * i < 0.5\n      var addToPriorSegment = segmentRatio * i % 1 < 0.5; // only skip segment if we already have 1 point in it (can't entirely remove a segment)\n\n      if (accum[insertIndex]) {\n        // TODO - Note this is a naive algorithm that should work for most d3-area use cases\n        // but if two adjacent segments are supposed to be skipped, this will not perform as\n        // expected. Could be updated to search for nearest segment to place the point in, but\n        // will only do that if necessary.\n        // add to the prior segment\n        if (addToPriorSegment) {\n          if (insertIndex > 0) {\n            insertIndex -= 1; // not possible to add to previous so adding to next\n          } else if (insertIndex < commandsToExtend.length - 1) {\n            insertIndex += 1;\n          } // add to next segment\n\n        } else if (insertIndex < commandsToExtend.length - 1) {\n          insertIndex += 1; // not possible to add to next so adding to previous\n        } else if (insertIndex > 0) {\n          insertIndex -= 1;\n        }\n      }\n    }\n\n    accum[insertIndex] = (accum[insertIndex] || 0) + 1;\n    return accum;\n  }, []); // extend each segment to have the correct number of points for a smooth interpolation\n\n  var extended = countPointsPerSegment.reduce(function (extended, segmentCount, i) {\n    // if last command, just add `segmentCount` number of times\n    if (i === commandsToExtend.length - 1) {\n      var lastCommandCopies = arrayOfLength(segmentCount, _extends({}, commandsToExtend[commandsToExtend.length - 1])); // convert M to L\n\n      if (lastCommandCopies[0].type === 'M') {\n        lastCommandCopies.forEach(function (d) {\n          d.type = 'L';\n        });\n      }\n\n      return extended.concat(lastCommandCopies);\n    } // otherwise, split the segment segmentCount times.\n\n\n    return extended.concat(splitSegment(commandsToExtend[i], commandsToExtend[i + 1], segmentCount));\n  }, []); // add in the very first point since splitSegment only adds in the ones after it\n\n  extended.unshift(commandsToExtend[0]);\n  return extended;\n}\n/**\n * Takes a path `d` string and converts it into an array of command\n * objects. Drops the `Z` character.\n *\n * @param {String|null} d A path `d` string\n */\n\n\nfunction pathCommandsFromString(d) {\n  // split into valid tokens\n  var tokens = (d || '').match(commandTokenRegex) || [];\n  var commands = [];\n  var commandArgs;\n  var command; // iterate over each token, checking if we are at a new command\n  // by presence in the typeMap\n\n  for (var i = 0; i < tokens.length; ++i) {\n    commandArgs = typeMap[tokens[i]]; // new command found:\n\n    if (commandArgs) {\n      command = {\n        type: tokens[i]\n      }; // add each of the expected args for this command:\n\n      for (var a = 0; a < commandArgs.length; ++a) {\n        command[commandArgs[a]] = +tokens[i + a + 1];\n      } // need to increment our token index appropriately since\n      // we consumed token args\n\n\n      i += commandArgs.length;\n      commands.push(command);\n    }\n  }\n\n  return commands;\n}\n/**\n * Interpolate from A to B by extending A and B during interpolation to have\n * the same number of points. This allows for a smooth transition when they\n * have a different number of points.\n *\n * Ignores the `Z` command in paths unless both A and B end with it.\n *\n * This function works directly with arrays of command objects instead of with\n * path `d` strings (see interpolatePath for working with `d` strings).\n *\n * @param {Object[]} aCommandsInput Array of path commands\n * @param {Object[]} bCommandsInput Array of path commands\n * @param {Function} excludeSegment a function that takes a start command object and\n *   end command object and returns true if the segment should be excluded from splitting.\n * @returns {Function} Interpolation function that maps t ([0, 1]) to an array of path commands.\n */\n\nfunction interpolatePathCommands(aCommandsInput, bCommandsInput, excludeSegment) {\n  // make a copy so we don't mess with the input arrays\n  var aCommands = aCommandsInput == null ? [] : aCommandsInput.slice();\n  var bCommands = bCommandsInput == null ? [] : bCommandsInput.slice(); // both input sets are empty, so we don't interpolate\n\n  if (!aCommands.length && !bCommands.length) {\n    return function nullInterpolator() {\n      return [];\n    };\n  } // do we add Z during interpolation? yes if both have it. (we'd expect both to have it or not)\n\n\n  var addZ = (aCommands.length === 0 || aCommands[aCommands.length - 1].type === 'Z') && (bCommands.length === 0 || bCommands[bCommands.length - 1].type === 'Z'); // we temporarily remove Z\n\n  if (aCommands.length > 0 && aCommands[aCommands.length - 1].type === 'Z') {\n    aCommands.pop();\n  }\n\n  if (bCommands.length > 0 && bCommands[bCommands.length - 1].type === 'Z') {\n    bCommands.pop();\n  } // if A is empty, treat it as if it used to contain just the first point\n  // of B. This makes it so the line extends out of from that first point.\n\n\n  if (!aCommands.length) {\n    aCommands.push(bCommands[0]); // otherwise if B is empty, treat it as if it contains the first point\n    // of A. This makes it so the line retracts into the first point.\n  } else if (!bCommands.length) {\n    bCommands.push(aCommands[0]);\n  } // extend to match equal size\n\n\n  var numPointsToExtend = Math.abs(bCommands.length - aCommands.length);\n\n  if (numPointsToExtend !== 0) {\n    // B has more points than A, so add points to A before interpolating\n    if (bCommands.length > aCommands.length) {\n      aCommands = extend(aCommands, bCommands, excludeSegment); // else if A has more points than B, add more points to B\n    } else if (bCommands.length < aCommands.length) {\n      bCommands = extend(bCommands, aCommands, excludeSegment);\n    }\n  } // commands have same length now.\n  // convert commands in A to the same type as those in B\n\n\n  aCommands = aCommands.map(function (aCommand, i) {\n    return convertToSameType(aCommand, bCommands[i]);\n  }); // create mutable interpolated command objects\n\n  var interpolatedCommands = aCommands.map(function (aCommand) {\n    return _objectSpread2({}, aCommand);\n  });\n\n  if (addZ) {\n    interpolatedCommands.push({\n      type: 'Z'\n    });\n  }\n\n  return function pathCommandInterpolator(t) {\n    // at 1 return the final value without the extensions used during interpolation\n    if (t === 1) {\n      return bCommandsInput == null ? [] : bCommandsInput;\n    } // interpolate the commands using the mutable interpolated command objs\n    // we can skip at t=0 since we copied aCommands to begin\n\n\n    if (t > 0) {\n      for (var i = 0; i < interpolatedCommands.length; ++i) {\n        // if (interpolatedCommands[i].type === 'Z') continue;\n        var aCommand = aCommands[i];\n        var bCommand = bCommands[i];\n        var interpolatedCommand = interpolatedCommands[i];\n\n        var _iterator = _createForOfIteratorHelper(typeMap[interpolatedCommand.type]),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var arg = _step.value;\n            interpolatedCommand[arg] = (1 - t) * aCommand[arg] + t * bCommand[arg]; // do not use floats for flags (#27), round to integer\n\n            if (arg === 'largeArcFlag' || arg === 'sweepFlag') {\n              interpolatedCommand[arg] = Math.round(interpolatedCommand[arg]);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }\n\n    return interpolatedCommands;\n  };\n}\n/**\n * Interpolate from A to B by extending A and B during interpolation to have\n * the same number of points. This allows for a smooth transition when they\n * have a different number of points.\n *\n * Ignores the `Z` character in paths unless both A and B end with it.\n *\n * @param {String} a The `d` attribute for a path\n * @param {String} b The `d` attribute for a path\n * @param {Function} excludeSegment a function that takes a start command object and\n *   end command object and returns true if the segment should be excluded from splitting.\n * @returns {Function} Interpolation function that maps t ([0, 1]) to a path `d` string.\n */\n\nfunction interpolatePath(a, b, excludeSegment) {\n  var aCommands = pathCommandsFromString(a);\n  var bCommands = pathCommandsFromString(b);\n\n  if (!aCommands.length && !bCommands.length) {\n    return function nullInterpolator() {\n      return '';\n    };\n  }\n\n  var commandInterpolator = interpolatePathCommands(aCommands, bCommands, excludeSegment);\n  return function pathStringInterpolator(t) {\n    // at 1 return the final value without the extensions used during interpolation\n    if (t === 1) {\n      return b == null ? '' : b;\n    }\n\n    var interpolatedCommands = commandInterpolator(t); // convert to a string (fastest concat: https://jsperf.com/join-concat/150)\n\n    var interpolatedString = '';\n\n    var _iterator2 = _createForOfIteratorHelper(interpolatedCommands),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var interpolatedCommand = _step2.value;\n        interpolatedString += commandToString(interpolatedCommand);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    return interpolatedString;\n  };\n}\n\nexports.interpolatePath = interpolatePath;\nexports.interpolatePathCommands = interpolatePathCommands;\nexports.pathCommandsFromString = pathCommandsFromString;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":261,"column":0},"generated":{"line":263,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":262,"column":0},"generated":{"line":264,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":263,"column":0},"generated":{"line":265,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":264,"column":0},"generated":{"line":266,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":265,"column":0},"generated":{"line":267,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":266,"column":0},"generated":{"line":268,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":267,"column":0},"generated":{"line":269,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":268,"column":0},"generated":{"line":270,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":269,"column":0},"generated":{"line":271,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":270,"column":0},"generated":{"line":272,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":271,"column":0},"generated":{"line":273,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":272,"column":0},"generated":{"line":274,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":273,"column":0},"generated":{"line":275,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":274,"column":0},"generated":{"line":276,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":275,"column":0},"generated":{"line":277,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":276,"column":0},"generated":{"line":278,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":277,"column":0},"generated":{"line":279,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":278,"column":0},"generated":{"line":280,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":279,"column":0},"generated":{"line":281,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":280,"column":0},"generated":{"line":282,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":281,"column":0},"generated":{"line":283,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":282,"column":0},"generated":{"line":284,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":283,"column":0},"generated":{"line":285,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":284,"column":0},"generated":{"line":286,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":285,"column":0},"generated":{"line":287,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":286,"column":0},"generated":{"line":288,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":287,"column":0},"generated":{"line":289,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":288,"column":0},"generated":{"line":290,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":289,"column":0},"generated":{"line":291,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":290,"column":0},"generated":{"line":292,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":291,"column":0},"generated":{"line":293,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":292,"column":0},"generated":{"line":294,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":293,"column":0},"generated":{"line":295,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":294,"column":0},"generated":{"line":296,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":295,"column":0},"generated":{"line":297,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":296,"column":0},"generated":{"line":298,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":297,"column":0},"generated":{"line":299,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":298,"column":0},"generated":{"line":300,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":299,"column":0},"generated":{"line":301,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":300,"column":0},"generated":{"line":302,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":301,"column":0},"generated":{"line":303,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":302,"column":0},"generated":{"line":304,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":303,"column":0},"generated":{"line":305,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":304,"column":0},"generated":{"line":306,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":305,"column":0},"generated":{"line":307,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":306,"column":0},"generated":{"line":308,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":307,"column":0},"generated":{"line":309,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":308,"column":0},"generated":{"line":310,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":309,"column":0},"generated":{"line":311,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":310,"column":0},"generated":{"line":312,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":311,"column":0},"generated":{"line":313,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":312,"column":0},"generated":{"line":314,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":313,"column":0},"generated":{"line":315,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":314,"column":0},"generated":{"line":316,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":315,"column":0},"generated":{"line":317,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":316,"column":0},"generated":{"line":318,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":317,"column":0},"generated":{"line":319,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":318,"column":0},"generated":{"line":320,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":319,"column":0},"generated":{"line":321,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":320,"column":0},"generated":{"line":322,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":321,"column":0},"generated":{"line":323,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":322,"column":0},"generated":{"line":324,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":323,"column":0},"generated":{"line":325,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":324,"column":0},"generated":{"line":326,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":325,"column":0},"generated":{"line":327,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":326,"column":0},"generated":{"line":328,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":327,"column":0},"generated":{"line":329,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":328,"column":0},"generated":{"line":330,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":329,"column":0},"generated":{"line":331,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":330,"column":0},"generated":{"line":332,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":331,"column":0},"generated":{"line":333,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":332,"column":0},"generated":{"line":334,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":333,"column":0},"generated":{"line":335,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":334,"column":0},"generated":{"line":336,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":335,"column":0},"generated":{"line":337,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":336,"column":0},"generated":{"line":338,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":337,"column":0},"generated":{"line":339,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":338,"column":0},"generated":{"line":340,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":339,"column":0},"generated":{"line":341,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":340,"column":0},"generated":{"line":342,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":341,"column":0},"generated":{"line":343,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":342,"column":0},"generated":{"line":344,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":343,"column":0},"generated":{"line":345,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":344,"column":0},"generated":{"line":346,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":345,"column":0},"generated":{"line":347,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":346,"column":0},"generated":{"line":348,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":347,"column":0},"generated":{"line":349,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":348,"column":0},"generated":{"line":350,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":349,"column":0},"generated":{"line":351,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":350,"column":0},"generated":{"line":352,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":351,"column":0},"generated":{"line":353,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":352,"column":0},"generated":{"line":354,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":353,"column":0},"generated":{"line":355,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":354,"column":0},"generated":{"line":356,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":355,"column":0},"generated":{"line":357,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":356,"column":0},"generated":{"line":358,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":357,"column":0},"generated":{"line":359,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":358,"column":0},"generated":{"line":360,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":359,"column":0},"generated":{"line":361,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":360,"column":0},"generated":{"line":362,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":361,"column":0},"generated":{"line":363,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":362,"column":0},"generated":{"line":364,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":363,"column":0},"generated":{"line":365,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":364,"column":0},"generated":{"line":366,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":365,"column":0},"generated":{"line":367,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":366,"column":0},"generated":{"line":368,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":367,"column":0},"generated":{"line":369,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":368,"column":0},"generated":{"line":370,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":369,"column":0},"generated":{"line":371,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":370,"column":0},"generated":{"line":372,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":371,"column":0},"generated":{"line":373,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":372,"column":0},"generated":{"line":374,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":373,"column":0},"generated":{"line":375,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":374,"column":0},"generated":{"line":376,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":375,"column":0},"generated":{"line":377,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":376,"column":0},"generated":{"line":378,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":377,"column":0},"generated":{"line":379,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":378,"column":0},"generated":{"line":380,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":379,"column":0},"generated":{"line":381,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":380,"column":0},"generated":{"line":382,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":381,"column":0},"generated":{"line":383,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":382,"column":0},"generated":{"line":384,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":383,"column":0},"generated":{"line":385,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":384,"column":0},"generated":{"line":386,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":385,"column":0},"generated":{"line":387,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":386,"column":0},"generated":{"line":388,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":387,"column":0},"generated":{"line":389,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":388,"column":0},"generated":{"line":390,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":389,"column":0},"generated":{"line":391,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":390,"column":0},"generated":{"line":392,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":391,"column":0},"generated":{"line":393,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":392,"column":0},"generated":{"line":394,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":393,"column":0},"generated":{"line":395,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":394,"column":0},"generated":{"line":396,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":395,"column":0},"generated":{"line":397,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":396,"column":0},"generated":{"line":398,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":397,"column":0},"generated":{"line":399,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":398,"column":0},"generated":{"line":400,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":399,"column":0},"generated":{"line":401,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":400,"column":0},"generated":{"line":402,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":401,"column":0},"generated":{"line":403,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":402,"column":0},"generated":{"line":404,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":403,"column":0},"generated":{"line":405,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":404,"column":0},"generated":{"line":406,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":405,"column":0},"generated":{"line":407,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":406,"column":0},"generated":{"line":408,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":407,"column":0},"generated":{"line":409,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":408,"column":0},"generated":{"line":410,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":409,"column":0},"generated":{"line":411,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":410,"column":0},"generated":{"line":412,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":411,"column":0},"generated":{"line":413,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":412,"column":0},"generated":{"line":414,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":413,"column":0},"generated":{"line":415,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":414,"column":0},"generated":{"line":416,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":415,"column":0},"generated":{"line":417,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":416,"column":0},"generated":{"line":418,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":417,"column":0},"generated":{"line":419,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":418,"column":0},"generated":{"line":420,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":419,"column":0},"generated":{"line":421,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":420,"column":0},"generated":{"line":422,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":421,"column":0},"generated":{"line":423,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":422,"column":0},"generated":{"line":424,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":423,"column":0},"generated":{"line":425,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":424,"column":0},"generated":{"line":426,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":425,"column":0},"generated":{"line":427,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":426,"column":0},"generated":{"line":428,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":427,"column":0},"generated":{"line":429,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":428,"column":0},"generated":{"line":430,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":429,"column":0},"generated":{"line":431,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":430,"column":0},"generated":{"line":432,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":431,"column":0},"generated":{"line":433,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":432,"column":0},"generated":{"line":434,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":433,"column":0},"generated":{"line":435,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":434,"column":0},"generated":{"line":436,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":435,"column":0},"generated":{"line":437,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":436,"column":0},"generated":{"line":438,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":437,"column":0},"generated":{"line":439,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":438,"column":0},"generated":{"line":440,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":439,"column":0},"generated":{"line":441,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":440,"column":0},"generated":{"line":442,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":441,"column":0},"generated":{"line":443,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":442,"column":0},"generated":{"line":444,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":443,"column":0},"generated":{"line":445,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":444,"column":0},"generated":{"line":446,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":445,"column":0},"generated":{"line":447,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":446,"column":0},"generated":{"line":448,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":447,"column":0},"generated":{"line":449,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":448,"column":0},"generated":{"line":450,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":449,"column":0},"generated":{"line":451,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":450,"column":0},"generated":{"line":452,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":451,"column":0},"generated":{"line":453,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":452,"column":0},"generated":{"line":454,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":453,"column":0},"generated":{"line":455,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":454,"column":0},"generated":{"line":456,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":455,"column":0},"generated":{"line":457,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":456,"column":0},"generated":{"line":458,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":457,"column":0},"generated":{"line":459,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":458,"column":0},"generated":{"line":460,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":459,"column":0},"generated":{"line":461,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":460,"column":0},"generated":{"line":462,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":461,"column":0},"generated":{"line":463,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":462,"column":0},"generated":{"line":464,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":463,"column":0},"generated":{"line":465,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":464,"column":0},"generated":{"line":466,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":465,"column":0},"generated":{"line":467,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":466,"column":0},"generated":{"line":468,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":467,"column":0},"generated":{"line":469,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":468,"column":0},"generated":{"line":470,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":469,"column":0},"generated":{"line":471,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":470,"column":0},"generated":{"line":472,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":471,"column":0},"generated":{"line":473,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":472,"column":0},"generated":{"line":474,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":473,"column":0},"generated":{"line":475,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":474,"column":0},"generated":{"line":476,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":475,"column":0},"generated":{"line":477,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":476,"column":0},"generated":{"line":478,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":477,"column":0},"generated":{"line":479,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":478,"column":0},"generated":{"line":480,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":479,"column":0},"generated":{"line":481,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":480,"column":0},"generated":{"line":482,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":481,"column":0},"generated":{"line":483,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":482,"column":0},"generated":{"line":484,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":483,"column":0},"generated":{"line":485,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":484,"column":0},"generated":{"line":486,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":485,"column":0},"generated":{"line":487,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":486,"column":0},"generated":{"line":488,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":487,"column":0},"generated":{"line":489,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":488,"column":0},"generated":{"line":490,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":489,"column":0},"generated":{"line":491,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":490,"column":0},"generated":{"line":492,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":491,"column":0},"generated":{"line":493,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":492,"column":0},"generated":{"line":494,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":493,"column":0},"generated":{"line":495,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":494,"column":0},"generated":{"line":496,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":495,"column":0},"generated":{"line":497,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":496,"column":0},"generated":{"line":498,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":497,"column":0},"generated":{"line":499,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":498,"column":0},"generated":{"line":500,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":499,"column":0},"generated":{"line":501,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":500,"column":0},"generated":{"line":502,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":501,"column":0},"generated":{"line":503,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":502,"column":0},"generated":{"line":504,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":503,"column":0},"generated":{"line":505,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":504,"column":0},"generated":{"line":506,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":505,"column":0},"generated":{"line":507,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":506,"column":0},"generated":{"line":508,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":507,"column":0},"generated":{"line":509,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":508,"column":0},"generated":{"line":510,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":509,"column":0},"generated":{"line":511,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":510,"column":0},"generated":{"line":512,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":511,"column":0},"generated":{"line":513,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":512,"column":0},"generated":{"line":514,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":513,"column":0},"generated":{"line":515,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":514,"column":0},"generated":{"line":516,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":515,"column":0},"generated":{"line":517,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":516,"column":0},"generated":{"line":518,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":517,"column":0},"generated":{"line":519,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":518,"column":0},"generated":{"line":520,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":519,"column":0},"generated":{"line":521,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":520,"column":0},"generated":{"line":522,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":521,"column":0},"generated":{"line":523,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":522,"column":0},"generated":{"line":524,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":523,"column":0},"generated":{"line":525,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":524,"column":0},"generated":{"line":526,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":525,"column":0},"generated":{"line":527,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":526,"column":0},"generated":{"line":528,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":527,"column":0},"generated":{"line":529,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":528,"column":0},"generated":{"line":530,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":529,"column":0},"generated":{"line":531,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":530,"column":0},"generated":{"line":532,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":531,"column":0},"generated":{"line":533,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":532,"column":0},"generated":{"line":534,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":533,"column":0},"generated":{"line":535,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":534,"column":0},"generated":{"line":536,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":535,"column":0},"generated":{"line":537,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":536,"column":0},"generated":{"line":538,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":537,"column":0},"generated":{"line":539,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":538,"column":0},"generated":{"line":540,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":539,"column":0},"generated":{"line":541,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":540,"column":0},"generated":{"line":542,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":541,"column":0},"generated":{"line":543,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":542,"column":0},"generated":{"line":544,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":543,"column":0},"generated":{"line":545,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":544,"column":0},"generated":{"line":546,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":545,"column":0},"generated":{"line":547,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":546,"column":0},"generated":{"line":548,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":547,"column":0},"generated":{"line":549,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":548,"column":0},"generated":{"line":550,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":549,"column":0},"generated":{"line":551,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":550,"column":0},"generated":{"line":552,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":551,"column":0},"generated":{"line":553,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":552,"column":0},"generated":{"line":554,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":553,"column":0},"generated":{"line":555,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":554,"column":0},"generated":{"line":556,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":555,"column":0},"generated":{"line":557,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":556,"column":0},"generated":{"line":558,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":557,"column":0},"generated":{"line":559,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":558,"column":0},"generated":{"line":560,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":559,"column":0},"generated":{"line":561,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":560,"column":0},"generated":{"line":562,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":561,"column":0},"generated":{"line":563,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":562,"column":0},"generated":{"line":564,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":563,"column":0},"generated":{"line":565,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":564,"column":0},"generated":{"line":566,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":565,"column":0},"generated":{"line":567,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":566,"column":0},"generated":{"line":568,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":567,"column":0},"generated":{"line":569,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":568,"column":0},"generated":{"line":570,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":569,"column":0},"generated":{"line":571,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":570,"column":0},"generated":{"line":572,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":571,"column":0},"generated":{"line":573,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":572,"column":0},"generated":{"line":574,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":573,"column":0},"generated":{"line":575,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":574,"column":0},"generated":{"line":576,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":575,"column":0},"generated":{"line":577,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":576,"column":0},"generated":{"line":578,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":577,"column":0},"generated":{"line":579,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":578,"column":0},"generated":{"line":580,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":579,"column":0},"generated":{"line":581,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":580,"column":0},"generated":{"line":582,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":581,"column":0},"generated":{"line":583,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":582,"column":0},"generated":{"line":584,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":583,"column":0},"generated":{"line":585,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":584,"column":0},"generated":{"line":586,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":585,"column":0},"generated":{"line":587,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":586,"column":0},"generated":{"line":588,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":587,"column":0},"generated":{"line":589,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":588,"column":0},"generated":{"line":590,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":589,"column":0},"generated":{"line":591,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":590,"column":0},"generated":{"line":592,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":591,"column":0},"generated":{"line":593,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":592,"column":0},"generated":{"line":594,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":593,"column":0},"generated":{"line":595,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":594,"column":0},"generated":{"line":596,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":595,"column":0},"generated":{"line":597,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":596,"column":0},"generated":{"line":598,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":597,"column":0},"generated":{"line":599,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":598,"column":0},"generated":{"line":600,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":599,"column":0},"generated":{"line":601,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":600,"column":0},"generated":{"line":602,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":601,"column":0},"generated":{"line":603,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":602,"column":0},"generated":{"line":604,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":603,"column":0},"generated":{"line":605,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":604,"column":0},"generated":{"line":606,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":605,"column":0},"generated":{"line":607,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":606,"column":0},"generated":{"line":608,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":607,"column":0},"generated":{"line":609,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":608,"column":0},"generated":{"line":610,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":609,"column":0},"generated":{"line":611,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":610,"column":0},"generated":{"line":612,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":611,"column":0},"generated":{"line":613,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":612,"column":0},"generated":{"line":614,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":613,"column":0},"generated":{"line":615,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":614,"column":0},"generated":{"line":616,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":615,"column":0},"generated":{"line":617,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":616,"column":0},"generated":{"line":618,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":617,"column":0},"generated":{"line":619,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":618,"column":0},"generated":{"line":620,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":619,"column":0},"generated":{"line":621,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":620,"column":0},"generated":{"line":622,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":621,"column":0},"generated":{"line":623,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":622,"column":0},"generated":{"line":624,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":623,"column":0},"generated":{"line":625,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":624,"column":0},"generated":{"line":626,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":625,"column":0},"generated":{"line":627,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":626,"column":0},"generated":{"line":628,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":627,"column":0},"generated":{"line":629,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":628,"column":0},"generated":{"line":630,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":629,"column":0},"generated":{"line":631,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":630,"column":0},"generated":{"line":632,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":631,"column":0},"generated":{"line":633,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":632,"column":0},"generated":{"line":634,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":633,"column":0},"generated":{"line":635,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":634,"column":0},"generated":{"line":636,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":635,"column":0},"generated":{"line":637,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":636,"column":0},"generated":{"line":638,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":637,"column":0},"generated":{"line":639,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":638,"column":0},"generated":{"line":640,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":639,"column":0},"generated":{"line":641,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":640,"column":0},"generated":{"line":642,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":641,"column":0},"generated":{"line":643,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":642,"column":0},"generated":{"line":644,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":643,"column":0},"generated":{"line":645,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":644,"column":0},"generated":{"line":646,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":645,"column":0},"generated":{"line":647,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":646,"column":0},"generated":{"line":648,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":647,"column":0},"generated":{"line":649,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":648,"column":0},"generated":{"line":650,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":649,"column":0},"generated":{"line":651,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":650,"column":0},"generated":{"line":652,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":651,"column":0},"generated":{"line":653,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":652,"column":0},"generated":{"line":654,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":653,"column":0},"generated":{"line":655,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":654,"column":0},"generated":{"line":656,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":655,"column":0},"generated":{"line":657,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":656,"column":0},"generated":{"line":658,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":657,"column":0},"generated":{"line":659,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":658,"column":0},"generated":{"line":660,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":659,"column":0},"generated":{"line":661,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":660,"column":0},"generated":{"line":662,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":661,"column":0},"generated":{"line":663,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":662,"column":0},"generated":{"line":664,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":663,"column":0},"generated":{"line":665,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":664,"column":0},"generated":{"line":666,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":665,"column":0},"generated":{"line":667,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":666,"column":0},"generated":{"line":668,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":667,"column":0},"generated":{"line":669,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":668,"column":0},"generated":{"line":670,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":669,"column":0},"generated":{"line":671,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":670,"column":0},"generated":{"line":672,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":671,"column":0},"generated":{"line":673,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":672,"column":0},"generated":{"line":674,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":673,"column":0},"generated":{"line":675,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":674,"column":0},"generated":{"line":676,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":675,"column":0},"generated":{"line":677,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":676,"column":0},"generated":{"line":678,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":677,"column":0},"generated":{"line":679,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":678,"column":0},"generated":{"line":680,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":679,"column":0},"generated":{"line":681,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":680,"column":0},"generated":{"line":682,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":681,"column":0},"generated":{"line":683,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":682,"column":0},"generated":{"line":684,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":683,"column":0},"generated":{"line":685,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":684,"column":0},"generated":{"line":686,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":685,"column":0},"generated":{"line":687,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":686,"column":0},"generated":{"line":688,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":687,"column":0},"generated":{"line":689,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":688,"column":0},"generated":{"line":690,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":689,"column":0},"generated":{"line":691,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":690,"column":0},"generated":{"line":692,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":691,"column":0},"generated":{"line":693,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":692,"column":0},"generated":{"line":694,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":693,"column":0},"generated":{"line":695,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":694,"column":0},"generated":{"line":696,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":695,"column":0},"generated":{"line":697,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":696,"column":0},"generated":{"line":698,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":697,"column":0},"generated":{"line":699,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":698,"column":0},"generated":{"line":700,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":699,"column":0},"generated":{"line":701,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":700,"column":0},"generated":{"line":702,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":701,"column":0},"generated":{"line":703,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":702,"column":0},"generated":{"line":704,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":703,"column":0},"generated":{"line":705,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":704,"column":0},"generated":{"line":706,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":705,"column":0},"generated":{"line":707,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":706,"column":0},"generated":{"line":708,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":707,"column":0},"generated":{"line":709,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":708,"column":0},"generated":{"line":710,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":709,"column":0},"generated":{"line":711,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":710,"column":0},"generated":{"line":712,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":711,"column":0},"generated":{"line":713,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":712,"column":0},"generated":{"line":714,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":713,"column":0},"generated":{"line":715,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":714,"column":0},"generated":{"line":716,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":715,"column":0},"generated":{"line":717,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":716,"column":0},"generated":{"line":718,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":717,"column":0},"generated":{"line":719,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":718,"column":0},"generated":{"line":720,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":719,"column":0},"generated":{"line":721,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":720,"column":0},"generated":{"line":722,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":721,"column":0},"generated":{"line":723,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":722,"column":0},"generated":{"line":724,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":723,"column":0},"generated":{"line":725,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":724,"column":0},"generated":{"line":726,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":725,"column":0},"generated":{"line":727,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":726,"column":0},"generated":{"line":728,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":727,"column":0},"generated":{"line":729,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":728,"column":0},"generated":{"line":730,"column":0}},{"source":"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js","original":{"line":729,"column":0},"generated":{"line":731,"column":0}}],"sources":{"../../../../node_modules/d3-interpolate-path/build/d3-interpolate-path.js":"(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, (function (exports) { 'use strict';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = o[Symbol.iterator]();\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (e) {\n      didErr = true;\n      err = e;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\n/**\n * de Casteljau's algorithm for drawing and splitting bezier curves.\n * Inspired by https://pomax.github.io/bezierinfo/\n *\n * @param {Number[][]} points Array of [x,y] points: [start, control1, control2, ..., end]\n *   The original segment to split.\n * @param {Number} t Where to split the curve (value between [0, 1])\n * @return {Object} An object { left, right } where left is the segment from 0..t and\n *   right is the segment from t..1.\n */\nfunction decasteljau(points, t) {\n  var left = [];\n  var right = [];\n\n  function decasteljauRecurse(points, t) {\n    if (points.length === 1) {\n      left.push(points[0]);\n      right.push(points[0]);\n    } else {\n      var newPoints = Array(points.length - 1);\n\n      for (var i = 0; i < newPoints.length; i++) {\n        if (i === 0) {\n          left.push(points[0]);\n        }\n\n        if (i === newPoints.length - 1) {\n          right.push(points[i + 1]);\n        }\n\n        newPoints[i] = [(1 - t) * points[i][0] + t * points[i + 1][0], (1 - t) * points[i][1] + t * points[i + 1][1]];\n      }\n\n      decasteljauRecurse(newPoints, t);\n    }\n  }\n\n  if (points.length) {\n    decasteljauRecurse(points, t);\n  }\n\n  return {\n    left: left,\n    right: right.reverse()\n  };\n}\n/**\n * Convert segments represented as points back into a command object\n *\n * @param {Number[][]} points Array of [x,y] points: [start, control1, control2, ..., end]\n *   Represents a segment\n * @return {Object} A command object representing the segment.\n */\n\n\nfunction pointsToCommand(points) {\n  var command = {};\n\n  if (points.length === 4) {\n    command.x2 = points[2][0];\n    command.y2 = points[2][1];\n  }\n\n  if (points.length >= 3) {\n    command.x1 = points[1][0];\n    command.y1 = points[1][1];\n  }\n\n  command.x = points[points.length - 1][0];\n  command.y = points[points.length - 1][1];\n\n  if (points.length === 4) {\n    // start, control1, control2, end\n    command.type = 'C';\n  } else if (points.length === 3) {\n    // start, control, end\n    command.type = 'Q';\n  } else {\n    // start, end\n    command.type = 'L';\n  }\n\n  return command;\n}\n/**\n * Runs de Casteljau's algorithm enough times to produce the desired number of segments.\n *\n * @param {Number[][]} points Array of [x,y] points for de Casteljau (the initial segment to split)\n * @param {Number} segmentCount Number of segments to split the original into\n * @return {Number[][][]} Array of segments\n */\n\n\nfunction splitCurveAsPoints(points, segmentCount) {\n  segmentCount = segmentCount || 2;\n  var segments = [];\n  var remainingCurve = points;\n  var tIncrement = 1 / segmentCount; // x-----x-----x-----x\n  // t=  0.33   0.66   1\n  // x-----o-----------x\n  // r=  0.33\n  //       x-----o-----x\n  // r=         0.5  (0.33 / (1 - 0.33))  === tIncrement / (1 - (tIncrement * (i - 1))\n  // x-----x-----x-----x----x\n  // t=  0.25   0.5   0.75  1\n  // x-----o----------------x\n  // r=  0.25\n  //       x-----o----------x\n  // r=         0.33  (0.25 / (1 - 0.25))\n  //             x-----o----x\n  // r=         0.5  (0.25 / (1 - 0.5))\n\n  for (var i = 0; i < segmentCount - 1; i++) {\n    var tRelative = tIncrement / (1 - tIncrement * i);\n    var split = decasteljau(remainingCurve, tRelative);\n    segments.push(split.left);\n    remainingCurve = split.right;\n  } // last segment is just to the end from the last point\n\n\n  segments.push(remainingCurve);\n  return segments;\n}\n/**\n * Convert command objects to arrays of points, run de Casteljau's algorithm on it\n * to split into to the desired number of segments.\n *\n * @param {Object} commandStart The start command object\n * @param {Object} commandEnd The end command object\n * @param {Number} segmentCount The number of segments to create\n * @return {Object[]} An array of commands representing the segments in sequence\n */\n\n\nfunction splitCurve(commandStart, commandEnd, segmentCount) {\n  var points = [[commandStart.x, commandStart.y]];\n\n  if (commandEnd.x1 != null) {\n    points.push([commandEnd.x1, commandEnd.y1]);\n  }\n\n  if (commandEnd.x2 != null) {\n    points.push([commandEnd.x2, commandEnd.y2]);\n  }\n\n  points.push([commandEnd.x, commandEnd.y]);\n  return splitCurveAsPoints(points, segmentCount).map(pointsToCommand);\n}\n\nvar commandTokenRegex = /[MLCSTQAHVZmlcstqahv]|-?[\\d.e+-]+/g;\n/**\n * List of params for each command type in a path `d` attribute\n */\n\nvar typeMap = {\n  M: ['x', 'y'],\n  L: ['x', 'y'],\n  H: ['x'],\n  V: ['y'],\n  C: ['x1', 'y1', 'x2', 'y2', 'x', 'y'],\n  S: ['x2', 'y2', 'x', 'y'],\n  Q: ['x1', 'y1', 'x', 'y'],\n  T: ['x', 'y'],\n  A: ['rx', 'ry', 'xAxisRotation', 'largeArcFlag', 'sweepFlag', 'x', 'y'],\n  Z: []\n}; // Add lower case entries too matching uppercase (e.g. 'm' == 'M')\n\nObject.keys(typeMap).forEach(function (key) {\n  typeMap[key.toLowerCase()] = typeMap[key];\n});\n\nfunction arrayOfLength(length, value) {\n  var array = Array(length);\n\n  for (var i = 0; i < length; i++) {\n    array[i] = value;\n  }\n\n  return array;\n}\n/**\n * Converts a command object to a string to be used in a `d` attribute\n * @param {Object} command A command object\n * @return {String} The string for the `d` attribute\n */\n\n\nfunction commandToString(command) {\n  return \"\".concat(command.type).concat(typeMap[command.type].map(function (p) {\n    return command[p];\n  }).join(','));\n}\n/**\n * Converts command A to have the same type as command B.\n *\n * e.g., L0,5 -> C0,5,0,5,0,5\n *\n * Uses these rules:\n * x1 <- x\n * x2 <- x\n * y1 <- y\n * y2 <- y\n * rx <- 0\n * ry <- 0\n * xAxisRotation <- read from B\n * largeArcFlag <- read from B\n * sweepflag <- read from B\n *\n * @param {Object} aCommand Command object from path `d` attribute\n * @param {Object} bCommand Command object from path `d` attribute to match against\n * @return {Object} aCommand converted to type of bCommand\n */\n\n\nfunction convertToSameType(aCommand, bCommand) {\n  var conversionMap = {\n    x1: 'x',\n    y1: 'y',\n    x2: 'x',\n    y2: 'y'\n  };\n  var readFromBKeys = ['xAxisRotation', 'largeArcFlag', 'sweepFlag']; // convert (but ignore M types)\n\n  if (aCommand.type !== bCommand.type && bCommand.type.toUpperCase() !== 'M') {\n    var aConverted = {};\n    Object.keys(bCommand).forEach(function (bKey) {\n      var bValue = bCommand[bKey]; // first read from the A command\n\n      var aValue = aCommand[bKey]; // if it is one of these values, read from B no matter what\n\n      if (aValue === undefined) {\n        if (readFromBKeys.includes(bKey)) {\n          aValue = bValue;\n        } else {\n          // if it wasn't in the A command, see if an equivalent was\n          if (aValue === undefined && conversionMap[bKey]) {\n            aValue = aCommand[conversionMap[bKey]];\n          } // if it doesn't have a converted value, use 0\n\n\n          if (aValue === undefined) {\n            aValue = 0;\n          }\n        }\n      }\n\n      aConverted[bKey] = aValue;\n    }); // update the type to match B\n\n    aConverted.type = bCommand.type;\n    aCommand = aConverted;\n  }\n\n  return aCommand;\n}\n/**\n * Interpolate between command objects commandStart and commandEnd segmentCount times.\n * If the types are L, Q, or C then the curves are split as per de Casteljau's algorithm.\n * Otherwise we just copy commandStart segmentCount - 1 times, finally ending with commandEnd.\n *\n * @param {Object} commandStart Command object at the beginning of the segment\n * @param {Object} commandEnd Command object at the end of the segment\n * @param {Number} segmentCount The number of segments to split this into. If only 1\n *   Then [commandEnd] is returned.\n * @return {Object[]} Array of ~segmentCount command objects between commandStart and\n *   commandEnd. (Can be segmentCount+1 objects if commandStart is type M).\n */\n\n\nfunction splitSegment(commandStart, commandEnd, segmentCount) {\n  var segments = []; // line, quadratic bezier, or cubic bezier\n\n  if (commandEnd.type === 'L' || commandEnd.type === 'Q' || commandEnd.type === 'C') {\n    segments = segments.concat(splitCurve(commandStart, commandEnd, segmentCount)); // general case - just copy the same point\n  } else {\n    var copyCommand = _extends({}, commandStart); // convert M to L\n\n\n    if (copyCommand.type === 'M') {\n      copyCommand.type = 'L';\n    }\n\n    segments = segments.concat(arrayOfLength(segmentCount - 1).map(function () {\n      return copyCommand;\n    }));\n    segments.push(commandEnd);\n  }\n\n  return segments;\n}\n/**\n * Extends an array of commandsToExtend to the length of the referenceCommands by\n * splitting segments until the number of commands match. Ensures all the actual\n * points of commandsToExtend are in the extended array.\n *\n * @param {Object[]} commandsToExtend The command object array to extend\n * @param {Object[]} referenceCommands The command object array to match in length\n * @param {Function} excludeSegment a function that takes a start command object and\n *   end command object and returns true if the segment should be excluded from splitting.\n * @return {Object[]} The extended commandsToExtend array\n */\n\n\nfunction extend(commandsToExtend, referenceCommands, excludeSegment) {\n  // compute insertion points:\n  // number of segments in the path to extend\n  var numSegmentsToExtend = commandsToExtend.length - 1; // number of segments in the reference path.\n\n  var numReferenceSegments = referenceCommands.length - 1; // this value is always between [0, 1].\n\n  var segmentRatio = numSegmentsToExtend / numReferenceSegments; // create a map, mapping segments in referenceCommands to how many points\n  // should be added in that segment (should always be >= 1 since we need each\n  // point itself).\n  // 0 = segment 0-1, 1 = segment 1-2, n-1 = last vertex\n\n  var countPointsPerSegment = arrayOfLength(numReferenceSegments).reduce(function (accum, d, i) {\n    var insertIndex = Math.floor(segmentRatio * i); // handle excluding segments\n\n    if (excludeSegment && insertIndex < commandsToExtend.length - 1 && excludeSegment(commandsToExtend[insertIndex], commandsToExtend[insertIndex + 1])) {\n      // set the insertIndex to the segment that this point should be added to:\n      // round the insertIndex essentially so we split half and half on\n      // neighbouring segments. hence the segmentRatio * i < 0.5\n      var addToPriorSegment = segmentRatio * i % 1 < 0.5; // only skip segment if we already have 1 point in it (can't entirely remove a segment)\n\n      if (accum[insertIndex]) {\n        // TODO - Note this is a naive algorithm that should work for most d3-area use cases\n        // but if two adjacent segments are supposed to be skipped, this will not perform as\n        // expected. Could be updated to search for nearest segment to place the point in, but\n        // will only do that if necessary.\n        // add to the prior segment\n        if (addToPriorSegment) {\n          if (insertIndex > 0) {\n            insertIndex -= 1; // not possible to add to previous so adding to next\n          } else if (insertIndex < commandsToExtend.length - 1) {\n            insertIndex += 1;\n          } // add to next segment\n\n        } else if (insertIndex < commandsToExtend.length - 1) {\n          insertIndex += 1; // not possible to add to next so adding to previous\n        } else if (insertIndex > 0) {\n          insertIndex -= 1;\n        }\n      }\n    }\n\n    accum[insertIndex] = (accum[insertIndex] || 0) + 1;\n    return accum;\n  }, []); // extend each segment to have the correct number of points for a smooth interpolation\n\n  var extended = countPointsPerSegment.reduce(function (extended, segmentCount, i) {\n    // if last command, just add `segmentCount` number of times\n    if (i === commandsToExtend.length - 1) {\n      var lastCommandCopies = arrayOfLength(segmentCount, _extends({}, commandsToExtend[commandsToExtend.length - 1])); // convert M to L\n\n      if (lastCommandCopies[0].type === 'M') {\n        lastCommandCopies.forEach(function (d) {\n          d.type = 'L';\n        });\n      }\n\n      return extended.concat(lastCommandCopies);\n    } // otherwise, split the segment segmentCount times.\n\n\n    return extended.concat(splitSegment(commandsToExtend[i], commandsToExtend[i + 1], segmentCount));\n  }, []); // add in the very first point since splitSegment only adds in the ones after it\n\n  extended.unshift(commandsToExtend[0]);\n  return extended;\n}\n/**\n * Takes a path `d` string and converts it into an array of command\n * objects. Drops the `Z` character.\n *\n * @param {String|null} d A path `d` string\n */\n\n\nfunction pathCommandsFromString(d) {\n  // split into valid tokens\n  var tokens = (d || '').match(commandTokenRegex) || [];\n  var commands = [];\n  var commandArgs;\n  var command; // iterate over each token, checking if we are at a new command\n  // by presence in the typeMap\n\n  for (var i = 0; i < tokens.length; ++i) {\n    commandArgs = typeMap[tokens[i]]; // new command found:\n\n    if (commandArgs) {\n      command = {\n        type: tokens[i]\n      }; // add each of the expected args for this command:\n\n      for (var a = 0; a < commandArgs.length; ++a) {\n        command[commandArgs[a]] = +tokens[i + a + 1];\n      } // need to increment our token index appropriately since\n      // we consumed token args\n\n\n      i += commandArgs.length;\n      commands.push(command);\n    }\n  }\n\n  return commands;\n}\n/**\n * Interpolate from A to B by extending A and B during interpolation to have\n * the same number of points. This allows for a smooth transition when they\n * have a different number of points.\n *\n * Ignores the `Z` command in paths unless both A and B end with it.\n *\n * This function works directly with arrays of command objects instead of with\n * path `d` strings (see interpolatePath for working with `d` strings).\n *\n * @param {Object[]} aCommandsInput Array of path commands\n * @param {Object[]} bCommandsInput Array of path commands\n * @param {Function} excludeSegment a function that takes a start command object and\n *   end command object and returns true if the segment should be excluded from splitting.\n * @returns {Function} Interpolation function that maps t ([0, 1]) to an array of path commands.\n */\n\nfunction interpolatePathCommands(aCommandsInput, bCommandsInput, excludeSegment) {\n  // make a copy so we don't mess with the input arrays\n  var aCommands = aCommandsInput == null ? [] : aCommandsInput.slice();\n  var bCommands = bCommandsInput == null ? [] : bCommandsInput.slice(); // both input sets are empty, so we don't interpolate\n\n  if (!aCommands.length && !bCommands.length) {\n    return function nullInterpolator() {\n      return [];\n    };\n  } // do we add Z during interpolation? yes if both have it. (we'd expect both to have it or not)\n\n\n  var addZ = (aCommands.length === 0 || aCommands[aCommands.length - 1].type === 'Z') && (bCommands.length === 0 || bCommands[bCommands.length - 1].type === 'Z'); // we temporarily remove Z\n\n  if (aCommands.length > 0 && aCommands[aCommands.length - 1].type === 'Z') {\n    aCommands.pop();\n  }\n\n  if (bCommands.length > 0 && bCommands[bCommands.length - 1].type === 'Z') {\n    bCommands.pop();\n  } // if A is empty, treat it as if it used to contain just the first point\n  // of B. This makes it so the line extends out of from that first point.\n\n\n  if (!aCommands.length) {\n    aCommands.push(bCommands[0]); // otherwise if B is empty, treat it as if it contains the first point\n    // of A. This makes it so the line retracts into the first point.\n  } else if (!bCommands.length) {\n    bCommands.push(aCommands[0]);\n  } // extend to match equal size\n\n\n  var numPointsToExtend = Math.abs(bCommands.length - aCommands.length);\n\n  if (numPointsToExtend !== 0) {\n    // B has more points than A, so add points to A before interpolating\n    if (bCommands.length > aCommands.length) {\n      aCommands = extend(aCommands, bCommands, excludeSegment); // else if A has more points than B, add more points to B\n    } else if (bCommands.length < aCommands.length) {\n      bCommands = extend(bCommands, aCommands, excludeSegment);\n    }\n  } // commands have same length now.\n  // convert commands in A to the same type as those in B\n\n\n  aCommands = aCommands.map(function (aCommand, i) {\n    return convertToSameType(aCommand, bCommands[i]);\n  }); // create mutable interpolated command objects\n\n  var interpolatedCommands = aCommands.map(function (aCommand) {\n    return _objectSpread2({}, aCommand);\n  });\n\n  if (addZ) {\n    interpolatedCommands.push({\n      type: 'Z'\n    });\n  }\n\n  return function pathCommandInterpolator(t) {\n    // at 1 return the final value without the extensions used during interpolation\n    if (t === 1) {\n      return bCommandsInput == null ? [] : bCommandsInput;\n    } // interpolate the commands using the mutable interpolated command objs\n    // we can skip at t=0 since we copied aCommands to begin\n\n\n    if (t > 0) {\n      for (var i = 0; i < interpolatedCommands.length; ++i) {\n        // if (interpolatedCommands[i].type === 'Z') continue;\n        var aCommand = aCommands[i];\n        var bCommand = bCommands[i];\n        var interpolatedCommand = interpolatedCommands[i];\n\n        var _iterator = _createForOfIteratorHelper(typeMap[interpolatedCommand.type]),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var arg = _step.value;\n            interpolatedCommand[arg] = (1 - t) * aCommand[arg] + t * bCommand[arg]; // do not use floats for flags (#27), round to integer\n\n            if (arg === 'largeArcFlag' || arg === 'sweepFlag') {\n              interpolatedCommand[arg] = Math.round(interpolatedCommand[arg]);\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }\n\n    return interpolatedCommands;\n  };\n}\n/**\n * Interpolate from A to B by extending A and B during interpolation to have\n * the same number of points. This allows for a smooth transition when they\n * have a different number of points.\n *\n * Ignores the `Z` character in paths unless both A and B end with it.\n *\n * @param {String} a The `d` attribute for a path\n * @param {String} b The `d` attribute for a path\n * @param {Function} excludeSegment a function that takes a start command object and\n *   end command object and returns true if the segment should be excluded from splitting.\n * @returns {Function} Interpolation function that maps t ([0, 1]) to a path `d` string.\n */\n\nfunction interpolatePath(a, b, excludeSegment) {\n  var aCommands = pathCommandsFromString(a);\n  var bCommands = pathCommandsFromString(b);\n\n  if (!aCommands.length && !bCommands.length) {\n    return function nullInterpolator() {\n      return '';\n    };\n  }\n\n  var commandInterpolator = interpolatePathCommands(aCommands, bCommands, excludeSegment);\n  return function pathStringInterpolator(t) {\n    // at 1 return the final value without the extensions used during interpolation\n    if (t === 1) {\n      return b == null ? '' : b;\n    }\n\n    var interpolatedCommands = commandInterpolator(t); // convert to a string (fastest concat: https://jsperf.com/join-concat/150)\n\n    var interpolatedString = '';\n\n    var _iterator2 = _createForOfIteratorHelper(interpolatedCommands),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var interpolatedCommand = _step2.value;\n        interpolatedString += commandToString(interpolatedCommand);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    return interpolatedString;\n  };\n}\n\nexports.interpolatePath = interpolatePath;\nexports.interpolatePathCommands = interpolatePathCommands;\nexports.pathCommandsFromString = pathCommandsFromString;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"},"lineCount":731}},"error":null,"hash":"4b905df19517b776f2bd228647dcf145","cacheData":{"env":{}}}