{"id":"QYwd","dependencies":[{"name":"/Users/federico/git/test/impc-mousephenotype-web/node_modules/mitt/dist/mitt.es.js.map","includedInParent":true,"mtime":1611659386311},{"name":"/Users/federico/git/test/impc-mousephenotype-web/packages/widgets/late-adult-heatmap/package.json","includedInParent":true,"mtime":1614276654229},{"name":"/Users/federico/git/test/impc-mousephenotype-web/node_modules/mitt/package.json","includedInParent":true,"mtime":1611659386311}],"generated":{"js":"\"use strict\";function e(e){return{all:e=e||new Map,on:function(t,n){var i=e.get(t);i&&i.push(n)||e.set(t,[n])},off:function(t,n){var i=e.get(t);i&&i.splice(i.indexOf(n)>>>0,1)},emit:function(t,n){(e.get(t)||[]).slice().map(function(e){e(n)}),(e.get(\"*\")||[]).slice().map(function(e){e(t,n)})}}}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/index.ts","name":"evt","original":{"line":82,"column":95},"generated":{"line":1,"column":0}},{"source":"../src/index.ts","name":"all","original":{"line":33,"column":29},"generated":{"line":1,"column":13}},{"source":"../src/index.ts","name":"all","original":{"line":33,"column":29},"generated":{"line":1,"column":22}},{"source":"../src/index.ts","name":"all","original":{"line":33,"column":29},"generated":{"line":1,"column":24}},{"source":"../src/index.ts","name":null,"original":{"line":36,"column":8},"generated":{"line":1,"column":27}},{"source":"../src/index.ts","name":null,"original":{"line":36,"column":8},"generated":{"line":1,"column":33}},{"source":"../src/index.ts","name":"all","original":{"line":41,"column":2},"generated":{"line":1,"column":34}},{"source":"../src/index.ts","name":"all","original":{"line":34,"column":1},"generated":{"line":1,"column":38}},{"source":"../src/index.ts","name":"all","original":{"line":34,"column":7},"generated":{"line":1,"column":40}},{"source":"../src/index.ts","name":null,"original":{"line":34,"column":14},"generated":{"line":1,"column":43}},{"source":"../src/index.ts","name":"Map","original":{"line":34,"column":18},"generated":{"line":1,"column":47}},{"source":"../src/index.ts","name":"on","original":{"line":49,"column":2},"generated":{"line":1,"column":51}},{"source":"../src/index.ts","name":"on","original":{"line":49,"column":2},"generated":{"line":1,"column":54}},{"source":"../src/index.ts","name":"type","original":{"line":49,"column":14},"generated":{"line":1,"column":63}},{"source":"../src/index.ts","name":"handler","original":{"line":49,"column":31},"generated":{"line":1,"column":65}},{"source":"../src/index.ts","name":"handlers","original":{"line":50,"column":9},"generated":{"line":1,"column":68}},{"source":"../src/index.ts","name":"handlers","original":{"line":50,"column":9},"generated":{"line":1,"column":72}},{"source":"../src/index.ts","name":"all","original":{"line":50,"column":20},"generated":{"line":1,"column":74}},{"source":"../src/index.ts","name":"get","original":{"line":50,"column":24},"generated":{"line":1,"column":76}},{"source":"../src/index.ts","name":"type","original":{"line":50,"column":28},"generated":{"line":1,"column":80}},{"source":"../src/index.ts","name":"handlers","original":{"line":51,"column":17},"generated":{"line":1,"column":83}},{"source":"../src/index.ts","name":"handlers","original":{"line":51,"column":29},"generated":{"line":1,"column":86}},{"source":"../src/index.ts","name":"push","original":{"line":51,"column":38},"generated":{"line":1,"column":88}},{"source":"../src/index.ts","name":"handler","original":{"line":51,"column":43},"generated":{"line":1,"column":93}},{"source":"../src/index.ts","name":"all","original":{"line":53,"column":4},"generated":{"line":1,"column":97}},{"source":"../src/index.ts","name":"set","original":{"line":53,"column":8},"generated":{"line":1,"column":99}},{"source":"../src/index.ts","name":"type","original":{"line":53,"column":12},"generated":{"line":1,"column":103}},{"source":"../src/index.ts","name":null,"original":{"line":53,"column":18},"generated":{"line":1,"column":105}},{"source":"../src/index.ts","name":"handler","original":{"line":53,"column":19},"generated":{"line":1,"column":106}},{"source":"../src/index.ts","name":"off","original":{"line":63,"column":2},"generated":{"line":1,"column":111}},{"source":"../src/index.ts","name":"off","original":{"line":63,"column":2},"generated":{"line":1,"column":115}},{"source":"../src/index.ts","name":"type","original":{"line":63,"column":15},"generated":{"line":1,"column":124}},{"source":"../src/index.ts","name":"handler","original":{"line":63,"column":32},"generated":{"line":1,"column":126}},{"source":"../src/index.ts","name":"handlers","original":{"line":64,"column":9},"generated":{"line":1,"column":129}},{"source":"../src/index.ts","name":"handlers","original":{"line":64,"column":9},"generated":{"line":1,"column":133}},{"source":"../src/index.ts","name":"all","original":{"line":64,"column":20},"generated":{"line":1,"column":135}},{"source":"../src/index.ts","name":"get","original":{"line":64,"column":24},"generated":{"line":1,"column":137}},{"source":"../src/index.ts","name":"type","original":{"line":64,"column":28},"generated":{"line":1,"column":141}},{"source":"../src/index.ts","name":"handlers","original":{"line":65,"column":7},"generated":{"line":1,"column":144}},{"source":"../src/index.ts","name":"handlers","original":{"line":66,"column":4},"generated":{"line":1,"column":147}},{"source":"../src/index.ts","name":"splice","original":{"line":66,"column":13},"generated":{"line":1,"column":149}},{"source":"../src/index.ts","name":"handlers","original":{"line":66,"column":20},"generated":{"line":1,"column":156}},{"source":"../src/index.ts","name":"indexOf","original":{"line":66,"column":29},"generated":{"line":1,"column":158}},{"source":"../src/index.ts","name":"handler","original":{"line":66,"column":37},"generated":{"line":1,"column":166}},{"source":"../src/index.ts","name":null,"original":{"line":66,"column":50},"generated":{"line":1,"column":171}},{"source":"../src/index.ts","name":null,"original":{"line":66,"column":53},"generated":{"line":1,"column":173}},{"source":"../src/index.ts","name":"emit","original":{"line":80,"column":2},"generated":{"line":1,"column":177}},{"source":"../src/index.ts","name":"emit","original":{"line":80,"column":2},"generated":{"line":1,"column":182}},{"source":"../src/index.ts","name":"type","original":{"line":80,"column":16},"generated":{"line":1,"column":191}},{"source":"../src/index.ts","name":"evt","original":{"line":80,"column":33},"generated":{"line":1,"column":193}},{"source":"../src/index.ts","name":"all","original":{"line":81,"column":5},"generated":{"line":1,"column":197}},{"source":"../src/index.ts","name":"get","original":{"line":81,"column":9},"generated":{"line":1,"column":199}},{"source":"../src/index.ts","name":"type","original":{"line":81,"column":13},"generated":{"line":1,"column":203}},{"source":"../src/index.ts","name":null,"original":{"line":81,"column":22},"generated":{"line":1,"column":207}},{"source":"../src/index.ts","name":"slice","original":{"line":81,"column":47},"generated":{"line":1,"column":211}},{"source":"../src/index.ts","name":"map","original":{"line":81,"column":55},"generated":{"line":1,"column":219}},{"source":"../src/index.ts","name":null,"original":{"line":81,"column":59},"generated":{"line":1,"column":223}},{"source":"../src/index.ts","name":"handler","original":{"line":81,"column":60},"generated":{"line":1,"column":232}},{"source":"../src/index.ts","name":"handler","original":{"line":81,"column":74},"generated":{"line":1,"column":235}},{"source":"../src/index.ts","name":"evt","original":{"line":81,"column":82},"generated":{"line":1,"column":237}},{"source":"../src/index.ts","name":"all","original":{"line":82,"column":5},"generated":{"line":1,"column":243}},{"source":"../src/index.ts","name":"get","original":{"line":82,"column":9},"generated":{"line":1,"column":245}},{"source":"../src/index.ts","name":null,"original":{"line":82,"column":13},"generated":{"line":1,"column":249}},{"source":"../src/index.ts","name":null,"original":{"line":82,"column":21},"generated":{"line":1,"column":255}},{"source":"../src/index.ts","name":"slice","original":{"line":82,"column":54},"generated":{"line":1,"column":259}},{"source":"../src/index.ts","name":"map","original":{"line":82,"column":62},"generated":{"line":1,"column":267}},{"source":"../src/index.ts","name":null,"original":{"line":82,"column":66},"generated":{"line":1,"column":271}},{"source":"../src/index.ts","name":"handler","original":{"line":82,"column":67},"generated":{"line":1,"column":280}},{"source":"../src/index.ts","name":"handler","original":{"line":82,"column":81},"generated":{"line":1,"column":283}},{"source":"../src/index.ts","name":"type","original":{"line":82,"column":89},"generated":{"line":1,"column":285}},{"source":"../src/index.ts","name":"evt","original":{"line":82,"column":95},"generated":{"line":1,"column":287}},{"source":"../src/index.ts","name":"evt","original":{"line":82,"column":95},"generated":{"line":1,"column":294}},{"source":"../src/index.ts","name":"evt","original":{"line":82,"column":95},"generated":{"line":1,"column":301}},{"source":"../src/index.ts","name":"evt","original":{"line":82,"column":95},"generated":{"line":1,"column":316}},{"source":"../src/index.ts","name":"evt","original":{"line":82,"column":95},"generated":{"line":1,"column":324}},{"source":"../src/index.ts","name":"evt","original":{"line":82,"column":95},"generated":{"line":1,"column":337}},{"source":"../src/index.ts","name":"evt","original":{"line":82,"column":95},"generated":{"line":1,"column":338}},{"source":"../src/index.ts","name":"evt","original":{"line":82,"column":95},"generated":{"line":1,"column":345}},{"source":"../src/index.ts","name":"evt","original":{"line":82,"column":95},"generated":{"line":1,"column":349}},{"source":"../src/index.ts","name":"evt","original":{"line":82,"column":95},"generated":{"line":1,"column":357}},{"source":"../src/index.ts","name":"evt","original":{"line":82,"column":95},"generated":{"line":1,"column":365}}],"sources":{"../src/index.ts":"export type EventType = string | symbol;\n\n// An event handler can take an optional event argument\n// and should not return a value\nexport type Handler<T = any> = (event?: T) => void;\nexport type WildcardHandler = (type: EventType, event?: any) => void;\n\n// An array of all currently registered event handlers for a type\nexport type EventHandlerList = Array<Handler>;\nexport type WildCardEventHandlerList = Array<WildcardHandler>;\n\n// A map of event types and their corresponding event handlers.\nexport type EventHandlerMap = Map<EventType, EventHandlerList | WildCardEventHandlerList>;\n\nexport interface Emitter {\n\tall: EventHandlerMap;\n\n\ton<T = any>(type: EventType, handler: Handler<T>): void;\n\ton(type: '*', handler: WildcardHandler): void;\n\n\toff<T = any>(type: EventType, handler: Handler<T>): void;\n\toff(type: '*', handler: WildcardHandler): void;\n\n\temit<T = any>(type: EventType, event?: T): void;\n\temit(type: '*', event?: any): void;\n}\n\n/**\n * Mitt: Tiny (~200b) functional event emitter / pubsub.\n * @name mitt\n * @returns {Mitt}\n */\nexport default function mitt(all?: EventHandlerMap): Emitter {\n\tall = all || new Map();\n\n\treturn {\n\n\t\t/**\n\t\t * A Map of event names to registered handler functions.\n\t\t */\n\t\tall,\n\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t * @param {string|symbol} type Type of event to listen for, or `\"*\"` for all events\n\t\t * @param {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton<T = any>(type: EventType, handler: Handler<T>) {\n\t\t\tconst handlers = all.get(type);\n\t\t\tconst added = handlers && handlers.push(handler);\n\t\t\tif (!added) {\n\t\t\t\tall.set(type, [handler]);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t * @param {string|symbol} type Type of event to unregister `handler` from, or `\"*\"`\n\t\t * @param {Function} handler Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff<T = any>(type: EventType, handler: Handler<T>) {\n\t\t\tconst handlers = all.get(type);\n\t\t\tif (handlers) {\n\t\t\t\thandlers.splice(handlers.indexOf(handler) >>> 0, 1);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `\"*\"` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * Note: Manually firing \"*\" handlers is not supported.\n\t\t *\n\t\t * @param {string|symbol} type The event type to invoke\n\t\t * @param {Any} [evt] Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberOf mitt\n\t\t */\n\t\temit<T = any>(type: EventType, evt: T) {\n\t\t\t((all.get(type) || []) as EventHandlerList).slice().map((handler) => { handler(evt); });\n\t\t\t((all.get('*') || []) as WildCardEventHandlerList).slice().map((handler) => { handler(type, evt); });\n\t\t}\n\t};\n}\n"},"lineCount":null}},"error":null,"hash":"2384059898eef2d4f4294d73501a5a42","cacheData":{"env":{}}}