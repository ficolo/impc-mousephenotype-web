{"ast":null,"code":"import _pt from \"prop-types\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport Legend from './Legend';\nimport identity from '../util/identity'; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nfunction labelFormatterFactoryFactory(_ref) {\n  var labelDelimiter = _ref.labelDelimiter;\n  return function (_ref2) {\n    var scale = _ref2.scale,\n        labelFormat = _ref2.labelFormat;\n    return function (datum, index) {\n      var _scale$invertExtent = scale.invertExtent(scale(datum)),\n          x0 = _scale$invertExtent[0],\n          x1 = _scale$invertExtent[1];\n\n      return {\n        extent: [x0, x1],\n        text: labelFormat(x0, index) + \" \" + labelDelimiter + \" \" + labelFormat(x1, index),\n        value: scale(x0),\n        datum: datum,\n        index: index\n      };\n    };\n  };\n}\n/** A Quantile scale takes a number input and returns an Output. */\n\n\nexport default function Quantile(_ref3) {\n  var inputDomain = _ref3.domain,\n      scale = _ref3.scale,\n      _ref3$labelFormat = _ref3.labelFormat,\n      labelFormat = _ref3$labelFormat === void 0 ? identity : _ref3$labelFormat,\n      inputLabelTransform = _ref3.labelTransform,\n      _ref3$labelDelimiter = _ref3.labelDelimiter,\n      labelDelimiter = _ref3$labelDelimiter === void 0 ? '-' : _ref3$labelDelimiter,\n      restProps = _objectWithoutPropertiesLoose(_ref3, [\"domain\", \"scale\", \"labelFormat\", \"labelTransform\", \"labelDelimiter\"]); // transform range into input values because it may contain more elements\n\n\n  var domain = inputDomain || scale.range().map(function (output) {\n    return scale.invertExtent(output)[0];\n  });\n  var labelTransform = inputLabelTransform || labelFormatterFactoryFactory({\n    labelDelimiter: labelDelimiter\n  });\n  return /*#__PURE__*/React.createElement(Legend, _extends({\n    scale: scale,\n    domain: domain,\n    labelFormat: labelFormat,\n    labelTransform: labelTransform\n  }, restProps));\n}\nQuantile.propTypes = {\n  labelDelimiter: _pt.string\n};","map":{"version":3,"sources":["/Users/federico/git/test/impc-mousephenotype-web/node_modules/@visx/legend/esm/legends/Quantile.js"],"names":["_pt","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","React","Legend","identity","labelFormatterFactoryFactory","_ref","labelDelimiter","_ref2","scale","labelFormat","datum","index","_scale$invertExtent","invertExtent","x0","x1","extent","text","value","Quantile","_ref3","inputDomain","domain","_ref3$labelFormat","inputLabelTransform","labelTransform","_ref3$labelDelimiter","restProps","range","map","output","createElement","propTypes","string"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport Legend from './Legend';\nimport identity from '../util/identity'; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nfunction labelFormatterFactoryFactory(_ref) {\n  var labelDelimiter = _ref.labelDelimiter;\n  return function (_ref2) {\n    var scale = _ref2.scale,\n        labelFormat = _ref2.labelFormat;\n    return function (datum, index) {\n      var _scale$invertExtent = scale.invertExtent(scale(datum)),\n          x0 = _scale$invertExtent[0],\n          x1 = _scale$invertExtent[1];\n\n      return {\n        extent: [x0, x1],\n        text: labelFormat(x0, index) + \" \" + labelDelimiter + \" \" + labelFormat(x1, index),\n        value: scale(x0),\n        datum: datum,\n        index: index\n      };\n    };\n  };\n}\n/** A Quantile scale takes a number input and returns an Output. */\n\n\nexport default function Quantile(_ref3) {\n  var inputDomain = _ref3.domain,\n      scale = _ref3.scale,\n      _ref3$labelFormat = _ref3.labelFormat,\n      labelFormat = _ref3$labelFormat === void 0 ? identity : _ref3$labelFormat,\n      inputLabelTransform = _ref3.labelTransform,\n      _ref3$labelDelimiter = _ref3.labelDelimiter,\n      labelDelimiter = _ref3$labelDelimiter === void 0 ? '-' : _ref3$labelDelimiter,\n      restProps = _objectWithoutPropertiesLoose(_ref3, [\"domain\", \"scale\", \"labelFormat\", \"labelTransform\", \"labelDelimiter\"]);\n\n  // transform range into input values because it may contain more elements\n  var domain = inputDomain || scale.range().map(function (output) {\n    return scale.invertExtent(output)[0];\n  });\n  var labelTransform = inputLabelTransform || labelFormatterFactoryFactory({\n    labelDelimiter: labelDelimiter\n  });\n  return /*#__PURE__*/React.createElement(Legend, _extends({\n    scale: scale,\n    domain: domain,\n    labelFormat: labelFormat,\n    labelTransform: labelTransform\n  }, restProps));\n}\nQuantile.propTypes = {\n  labelDelimiter: _pt.string\n};"]},"metadata":{},"sourceType":"module"}