{"ast":null,"code":"import _objectSpread from \"/Users/federico/git/test/impc-mousephenotype-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/federico/git/test/impc-mousephenotype-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Group } from \"@visx/group\";\nimport { ViolinPlot, BoxPlot } from \"@visx/stats\";\nimport { scaleBand, scaleLinear } from \"@visx/scale\";\nimport genStats from \"@visx/mock-data/lib/generators/genStats\";\nimport { withTooltip, Tooltip, defaultStyles as defaultTooltipStyles } from \"@visx/tooltip\";\nimport { PatternLines } from \"@visx/pattern\";\nimport { AnimatedAxis } from \"@visx/react-spring\";\nimport { Orientation } from \"@visx/axis\";\nimport { ParentSize } from \"@visx/responsive\";\nvar data = genStats(4);\nconsole.log(data.flatMap(function (d) {\n  return d.boxPlot.outliers;\n}).sort(function (a, b) {\n  return a - b;\n}));\n\nvar x = function x(d) {\n  return d.boxPlot.x;\n};\n\nvar min = function min(d) {\n  return d.boxPlot.min;\n};\n\nvar max = function max(d) {\n  return d.boxPlot.max;\n};\n\nvar median = function median(d) {\n  return d.boxPlot.median;\n};\n\nvar firstQuartile = function firstQuartile(d) {\n  return d.boxPlot.firstQuartile;\n};\n\nvar thirdQuartile = function thirdQuartile(d) {\n  return d.boxPlot.thirdQuartile;\n};\n\nvar outliers = function outliers(d) {\n  return d.boxPlot.outliers;\n};\n\nexport default withTooltip(function (_ref) {\n  var tooltipOpen = _ref.tooltipOpen,\n      tooltipLeft = _ref.tooltipLeft,\n      tooltipTop = _ref.tooltipTop,\n      tooltipData = _ref.tooltipData,\n      showTooltip = _ref.showTooltip,\n      hideTooltip = _ref.hideTooltip;\n  return _jsx(ParentSize, {\n    children: function children(parent) {\n      var xMax = parent.width;\n      var yMax = parent.height - 100;\n      var xScale = scaleBand({\n        range: [0, xMax],\n        round: true,\n        domain: data.map(x),\n        padding: 0.8\n      });\n      var values = data.reduce(function (allValues, _ref2) {\n        var boxPlot = _ref2.boxPlot;\n        allValues.push.apply(allValues, [boxPlot.max, boxPlot.min].concat(_toConsumableArray(boxPlot.outliers)));\n        return allValues;\n      }, []);\n      var minYValue = Math.min.apply(Math, _toConsumableArray(values));\n      var maxYValue = Math.max.apply(Math, _toConsumableArray(values));\n      var yScale = scaleLinear({\n        range: [yMax, 0],\n        round: true,\n        domain: [minYValue, maxYValue],\n        clamp: true,\n        nice: true\n      });\n      var boxWidth = xScale.bandwidth();\n      var constrainedWidth = boxWidth;\n      return _jsxs(\"div\", Object.assign({\n        style: {\n          position: \"relative\",\n          padding: 20\n        }\n      }, {\n        children: [_jsxs(\"svg\", Object.assign({\n          width: parent.width,\n          height: parent.height,\n          style: {\n            paddingTop: 10\n          }\n        }, {\n          children: [_jsx(PatternLines, {\n            id: \"hViolinLines\",\n            height: 3,\n            width: 3,\n            stroke: \"rgba(239, 121, 11, 0.325)\",\n            strokeWidth: 1,\n            orientation: [\"horizontal\"]\n          }, void 0), _jsx(AnimatedAxis, {\n            orientation: Orientation.bottom,\n            scale: xScale,\n            top: yMax,\n            animationTrajectory: \"outside\"\n          }, void 0), _jsx(AnimatedAxis, {\n            orientation: Orientation.left,\n            scale: yScale,\n            left: 20,\n            numTicks: 6,\n            tickLabelProps: function tickLabelProps() {\n              return {\n                verticalAnchor: \"middle\",\n                textAnchor: \"end\",\n                fontSize: 10\n              };\n            },\n            animationTrajectory: \"outside\"\n          }, void 0), _jsx(Group, {\n            children: data.map(function (d, i) {\n              return _jsxs(\"g\", {\n                children: [_jsx(ViolinPlot, {\n                  data: d.binData,\n                  stroke: \"rgba(239, 121, 11, 0.325)\",\n                  left: xScale(x(d)),\n                  width: constrainedWidth,\n                  valueScale: yScale,\n                  fill: \"url(#hViolinLines)\"\n                }, void 0), _jsx(BoxPlot, {\n                  min: min(d),\n                  max: max(d),\n                  left: xScale(x(d)) + constrainedWidth * 0.25,\n                  firstQuartile: firstQuartile(d),\n                  thirdQuartile: thirdQuartile(d),\n                  median: median(d),\n                  boxWidth: constrainedWidth * 0.5,\n                  fill: \"rgba(239, 123, 11, 0.5)\",\n                  fillOpacity: 0.3,\n                  stroke: \"rgba(239, 123, 11, 0.5)\",\n                  strokeWidth: 2,\n                  valueScale: yScale,\n                  outliers: outliers(d),\n                  minProps: {\n                    onMouseOver: function onMouseOver() {\n                      var _yScale;\n\n                      showTooltip({\n                        tooltipTop: (_yScale = yScale(min(d))) !== null && _yScale !== void 0 ? _yScale : 0 + 40,\n                        tooltipLeft: xScale(x(d)) + constrainedWidth + 5,\n                        tooltipData: {\n                          min: min(d),\n                          name: x(d)\n                        }\n                      });\n                    },\n                    onMouseLeave: function onMouseLeave() {\n                      hideTooltip();\n                    }\n                  },\n                  maxProps: {\n                    onMouseOver: function onMouseOver() {\n                      var _yScale2;\n\n                      showTooltip({\n                        tooltipTop: (_yScale2 = yScale(max(d))) !== null && _yScale2 !== void 0 ? _yScale2 : 0 + 40,\n                        tooltipLeft: xScale(x(d)) + constrainedWidth + 5,\n                        tooltipData: {\n                          max: max(d),\n                          name: x(d)\n                        }\n                      });\n                    },\n                    onMouseLeave: function onMouseLeave() {\n                      hideTooltip();\n                    }\n                  },\n                  boxProps: {\n                    onMouseOver: function onMouseOver() {\n                      var _yScale3;\n\n                      showTooltip({\n                        tooltipTop: (_yScale3 = yScale(median(d))) !== null && _yScale3 !== void 0 ? _yScale3 : 0 + 40,\n                        tooltipLeft: xScale(x(d)) + constrainedWidth + 5,\n                        tooltipData: _objectSpread(_objectSpread({}, d.boxPlot), {}, {\n                          name: x(d)\n                        })\n                      });\n                    },\n                    onMouseLeave: function onMouseLeave() {\n                      hideTooltip();\n                    }\n                  },\n                  medianProps: {\n                    style: {\n                      stroke: \"rgba(249, 129, 16, 0.667)\"\n                    },\n                    onMouseOver: function onMouseOver() {\n                      var _yScale4;\n\n                      showTooltip({\n                        tooltipTop: (_yScale4 = yScale(median(d))) !== null && _yScale4 !== void 0 ? _yScale4 : 0 + 40,\n                        tooltipLeft: xScale(x(d)) + constrainedWidth + 5,\n                        tooltipData: {\n                          median: median(d),\n                          name: x(d)\n                        }\n                      });\n                    },\n                    onMouseLeave: function onMouseLeave() {\n                      hideTooltip();\n                    }\n                  },\n                  outlierProps: {\n                    onMouseOver: function onMouseOver(_ref3) {\n                      var _yScale5;\n\n                      var target = _ref3.target;\n                      console.log(target);\n                      showTooltip({\n                        tooltipTop: (_yScale5 = yScale(median(d))) !== null && _yScale5 !== void 0 ? _yScale5 : 0 + 40,\n                        tooltipLeft: xScale(x(d)) + constrainedWidth + 5,\n                        tooltipData: {\n                          median: median(d),\n                          name: x(d)\n                        }\n                      });\n                    },\n                    onMouseLeave: function onMouseLeave() {\n                      hideTooltip();\n                    }\n                  }\n                }, void 0)]\n              }, i);\n            })\n          }, void 0)]\n        }), void 0), tooltipOpen && tooltipData && _jsxs(Tooltip, Object.assign({\n          top: tooltipTop,\n          left: tooltipLeft,\n          style: _objectSpread(_objectSpread({}, defaultTooltipStyles), {}, {\n            backgroundColor: \"#283238\",\n            color: \"white\"\n          })\n        }, {\n          children: [_jsx(\"div\", {\n            children: _jsx(\"strong\", {\n              children: tooltipData.name\n            }, void 0)\n          }, void 0), _jsxs(\"div\", Object.assign({\n            style: {\n              marginTop: \"5px\",\n              fontSize: \"12px\"\n            }\n          }, {\n            children: [tooltipData.max && _jsxs(\"div\", {\n              children: [\"max: \", tooltipData.max]\n            }, void 0), tooltipData.thirdQuartile && _jsxs(\"div\", {\n              children: [\"third quartile: \", tooltipData.thirdQuartile]\n            }, void 0), tooltipData.median && _jsxs(\"div\", {\n              children: [\"median: \", tooltipData.median]\n            }, void 0), tooltipData.firstQuartile && _jsxs(\"div\", {\n              children: [\"first quartile: \", tooltipData.firstQuartile]\n            }, void 0), tooltipData.min && _jsxs(\"div\", {\n              children: [\"min: \", tooltipData.min]\n            }, void 0)]\n          }), void 0)]\n        }), void 0)]\n      }), void 0);\n    }\n  }, void 0);\n});","map":{"version":3,"sources":["../../src/charts/BoxPlot.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Group } from \"@visx/group\";\nimport { ViolinPlot, BoxPlot } from \"@visx/stats\";\nimport { scaleBand, scaleLinear } from \"@visx/scale\";\nimport genStats from \"@visx/mock-data/lib/generators/genStats\";\nimport { withTooltip, Tooltip, defaultStyles as defaultTooltipStyles } from \"@visx/tooltip\";\nimport { PatternLines } from \"@visx/pattern\";\nimport { AnimatedAxis } from \"@visx/react-spring\";\nimport { Orientation } from \"@visx/axis\";\nimport { ParentSize } from \"@visx/responsive\";\nconst data = genStats(4);\nconsole.log(data.flatMap(d => d.boxPlot.outliers).sort((a, b) => a - b));\nconst x = (d) => d.boxPlot.x;\nconst min = (d) => d.boxPlot.min;\nconst max = (d) => d.boxPlot.max;\nconst median = (d) => d.boxPlot.median;\nconst firstQuartile = (d) => d.boxPlot.firstQuartile;\nconst thirdQuartile = (d) => d.boxPlot.thirdQuartile;\nconst outliers = (d) => d.boxPlot.outliers;\nexport default withTooltip(({ tooltipOpen, tooltipLeft, tooltipTop, tooltipData, showTooltip, hideTooltip }) => {\n    return (_jsx(ParentSize, { children: parent => {\n            const xMax = parent.width;\n            const yMax = parent.height - 100;\n            const xScale = scaleBand({\n                range: [0, xMax],\n                round: true,\n                domain: data.map(x),\n                padding: 0.8,\n            });\n            const values = data.reduce((allValues, { boxPlot }) => {\n                allValues.push(boxPlot.max, boxPlot.min, ...boxPlot.outliers);\n                return allValues;\n            }, []);\n            const minYValue = Math.min(...values);\n            const maxYValue = Math.max(...values);\n            const yScale = scaleLinear({\n                range: [yMax, 0],\n                round: true,\n                domain: [minYValue, maxYValue],\n                clamp: true,\n                nice: true\n            });\n            const boxWidth = xScale.bandwidth();\n            const constrainedWidth = boxWidth;\n            return (_jsxs(\"div\", Object.assign({ style: { position: \"relative\", padding: 20 } }, { children: [_jsxs(\"svg\", Object.assign({ width: parent.width, height: parent.height, style: { paddingTop: 10 } }, { children: [_jsx(PatternLines, { id: \"hViolinLines\", height: 3, width: 3, stroke: \"rgba(239, 121, 11, 0.325)\", strokeWidth: 1, orientation: [\"horizontal\"] }, void 0),\n                            _jsx(AnimatedAxis, { orientation: Orientation.bottom, scale: xScale, top: yMax, animationTrajectory: \"outside\" }, void 0),\n                            _jsx(AnimatedAxis, { orientation: Orientation.left, scale: yScale, left: 20, numTicks: 6, tickLabelProps: () => {\n                                    return {\n                                        verticalAnchor: \"middle\",\n                                        textAnchor: \"end\",\n                                        fontSize: 10\n                                    };\n                                }, animationTrajectory: \"outside\" }, void 0),\n                            _jsx(Group, { children: data.map((d, i) => (_jsxs(\"g\", { children: [_jsx(ViolinPlot, { data: d.binData, stroke: \"rgba(239, 121, 11, 0.325)\", left: xScale(x(d)), width: constrainedWidth, valueScale: yScale, fill: \"url(#hViolinLines)\" }, void 0),\n                                        _jsx(BoxPlot, { min: min(d), max: max(d), left: xScale(x(d)) + constrainedWidth * 0.25, firstQuartile: firstQuartile(d), thirdQuartile: thirdQuartile(d), median: median(d), boxWidth: constrainedWidth * 0.5, fill: \"rgba(239, 123, 11, 0.5)\", fillOpacity: 0.3, stroke: \"rgba(239, 123, 11, 0.5)\", strokeWidth: 2, valueScale: yScale, outliers: outliers(d), minProps: {\n                                                onMouseOver: () => {\n                                                    showTooltip({\n                                                        tooltipTop: yScale(min(d)) ?? 0 + 40,\n                                                        tooltipLeft: xScale(x(d)) + constrainedWidth + 5,\n                                                        tooltipData: {\n                                                            min: min(d),\n                                                            name: x(d)\n                                                        }\n                                                    });\n                                                },\n                                                onMouseLeave: () => {\n                                                    hideTooltip();\n                                                }\n                                            }, maxProps: {\n                                                onMouseOver: () => {\n                                                    showTooltip({\n                                                        tooltipTop: yScale(max(d)) ?? 0 + 40,\n                                                        tooltipLeft: xScale(x(d)) + constrainedWidth + 5,\n                                                        tooltipData: {\n                                                            max: max(d),\n                                                            name: x(d)\n                                                        }\n                                                    });\n                                                },\n                                                onMouseLeave: () => {\n                                                    hideTooltip();\n                                                }\n                                            }, boxProps: {\n                                                onMouseOver: () => {\n                                                    showTooltip({\n                                                        tooltipTop: yScale(median(d)) ?? 0 + 40,\n                                                        tooltipLeft: xScale(x(d)) + constrainedWidth + 5,\n                                                        tooltipData: {\n                                                            ...d.boxPlot,\n                                                            name: x(d)\n                                                        }\n                                                    });\n                                                },\n                                                onMouseLeave: () => {\n                                                    hideTooltip();\n                                                }\n                                            }, medianProps: {\n                                                style: {\n                                                    stroke: \"rgba(249, 129, 16, 0.667)\"\n                                                },\n                                                onMouseOver: () => {\n                                                    showTooltip({\n                                                        tooltipTop: yScale(median(d)) ?? 0 + 40,\n                                                        tooltipLeft: xScale(x(d)) + constrainedWidth + 5,\n                                                        tooltipData: {\n                                                            median: median(d),\n                                                            name: x(d)\n                                                        }\n                                                    });\n                                                },\n                                                onMouseLeave: () => {\n                                                    hideTooltip();\n                                                }\n                                            }, outlierProps: {\n                                                onMouseOver: ({ target }) => {\n                                                    console.log(target);\n                                                    showTooltip({\n                                                        tooltipTop: yScale(median(d)) ?? 0 + 40,\n                                                        tooltipLeft: xScale(x(d)) + constrainedWidth + 5,\n                                                        tooltipData: {\n                                                            median: median(d),\n                                                            name: x(d)\n                                                        }\n                                                    });\n                                                },\n                                                onMouseLeave: () => {\n                                                    hideTooltip();\n                                                }\n                                            } }, void 0)] }, i))) }, void 0)] }), void 0),\n                    tooltipOpen && tooltipData && (_jsxs(Tooltip, Object.assign({ top: tooltipTop, left: tooltipLeft, style: {\n                            ...defaultTooltipStyles,\n                            backgroundColor: \"#283238\",\n                            color: \"white\"\n                        } }, { children: [_jsx(\"div\", { children: _jsx(\"strong\", { children: tooltipData.name }, void 0) }, void 0),\n                            _jsxs(\"div\", Object.assign({ style: { marginTop: \"5px\", fontSize: \"12px\" } }, { children: [tooltipData.max && _jsxs(\"div\", { children: [\"max: \", tooltipData.max] }, void 0),\n                                    tooltipData.thirdQuartile && (_jsxs(\"div\", { children: [\"third quartile: \", tooltipData.thirdQuartile] }, void 0)),\n                                    tooltipData.median && (_jsxs(\"div\", { children: [\"median: \", tooltipData.median] }, void 0)),\n                                    tooltipData.firstQuartile && (_jsxs(\"div\", { children: [\"first quartile: \", tooltipData.firstQuartile] }, void 0)),\n                                    tooltipData.min && _jsxs(\"div\", { children: [\"min: \", tooltipData.min] }, void 0)] }), void 0)] }), void 0))] }), void 0));\n        } }, void 0));\n});\n//# sourceMappingURL=BoxPlot.js.map"]},"metadata":{},"sourceType":"module"}