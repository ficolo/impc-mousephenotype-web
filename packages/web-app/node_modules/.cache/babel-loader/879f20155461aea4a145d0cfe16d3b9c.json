{"ast":null,"code":"import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Group } from \"@visx/group\";\nimport { ViolinPlot, BoxPlot } from \"@visx/stats\";\nimport { scaleBand, scaleLinear } from \"@visx/scale\";\nimport genStats from \"@visx/mock-data/lib/generators/genStats\";\nimport { withTooltip, Tooltip, defaultStyles as defaultTooltipStyles } from \"@visx/tooltip\";\nimport { PatternLines } from \"@visx/pattern\";\nimport { AnimatedAxis } from \"@visx/react-spring\";\nimport { Orientation } from \"@visx/axis\";\nimport { ParentSize } from \"@visx/responsive\";\nconst data = genStats(4);\nconsole.log(data.flatMap(d => d.boxPlot.outliers).sort((a, b) => a - b));\n\nconst x = d => d.boxPlot.x;\n\nconst min = d => d.boxPlot.min;\n\nconst max = d => d.boxPlot.max;\n\nconst median = d => d.boxPlot.median;\n\nconst firstQuartile = d => d.boxPlot.firstQuartile;\n\nconst thirdQuartile = d => d.boxPlot.thirdQuartile;\n\nconst outliers = d => d.boxPlot.outliers;\n\nexport default withTooltip(({\n  tooltipOpen,\n  tooltipLeft,\n  tooltipTop,\n  tooltipData,\n  showTooltip,\n  hideTooltip\n}) => {\n  return _jsx(ParentSize, {\n    children: parent => {\n      const xMax = parent.width;\n      const yMax = parent.height - 100;\n      const xScale = scaleBand({\n        range: [0, xMax],\n        round: true,\n        domain: data.map(x),\n        padding: 0.8\n      });\n      const values = data.reduce((allValues, {\n        boxPlot\n      }) => {\n        allValues.push(boxPlot.max, boxPlot.min, ...boxPlot.outliers);\n        return allValues;\n      }, []);\n      const minYValue = Math.min(...values);\n      const maxYValue = Math.max(...values);\n      const yScale = scaleLinear({\n        range: [yMax, 0],\n        round: true,\n        domain: [minYValue, maxYValue],\n        clamp: true,\n        nice: true\n      });\n      const boxWidth = xScale.bandwidth();\n      const constrainedWidth = boxWidth;\n      return _jsxs(\"div\", Object.assign({\n        style: {\n          position: \"relative\",\n          padding: 20\n        }\n      }, {\n        children: [_jsxs(\"svg\", Object.assign({\n          width: parent.width,\n          height: parent.height,\n          style: {\n            paddingTop: 10\n          }\n        }, {\n          children: [_jsx(PatternLines, {\n            id: \"hViolinLines\",\n            height: 3,\n            width: 3,\n            stroke: \"rgba(239, 121, 11, 0.325)\",\n            strokeWidth: 1,\n            orientation: [\"horizontal\"]\n          }, void 0), _jsx(AnimatedAxis, {\n            orientation: Orientation.bottom,\n            scale: xScale,\n            top: yMax,\n            animationTrajectory: \"outside\"\n          }, void 0), _jsx(AnimatedAxis, {\n            orientation: Orientation.left,\n            scale: yScale,\n            left: 20,\n            numTicks: 6,\n            tickLabelProps: () => {\n              return {\n                verticalAnchor: \"middle\",\n                textAnchor: \"end\",\n                fontSize: 10\n              };\n            },\n            animationTrajectory: \"outside\"\n          }, void 0), _jsx(Group, {\n            children: data.map((d, i) => _jsxs(\"g\", {\n              children: [_jsx(ViolinPlot, {\n                data: d.binData,\n                stroke: \"rgba(239, 121, 11, 0.325)\",\n                left: xScale(x(d)),\n                width: constrainedWidth,\n                valueScale: yScale,\n                fill: \"url(#hViolinLines)\"\n              }, void 0), _jsx(BoxPlot, {\n                min: min(d),\n                max: max(d),\n                left: xScale(x(d)) + constrainedWidth * 0.25,\n                firstQuartile: firstQuartile(d),\n                thirdQuartile: thirdQuartile(d),\n                median: median(d),\n                boxWidth: constrainedWidth * 0.5,\n                fill: \"rgba(239, 123, 11, 0.5)\",\n                fillOpacity: 0.3,\n                stroke: \"rgba(239, 123, 11, 0.5)\",\n                strokeWidth: 2,\n                valueScale: yScale,\n                outliers: outliers(d),\n                minProps: {\n                  onMouseOver: () => {\n                    showTooltip({\n                      tooltipTop: yScale(min(d)) ?? 0 + 40,\n                      tooltipLeft: xScale(x(d)) + constrainedWidth + 5,\n                      tooltipData: {\n                        min: min(d),\n                        name: x(d)\n                      }\n                    });\n                  },\n                  onMouseLeave: () => {\n                    hideTooltip();\n                  }\n                },\n                maxProps: {\n                  onMouseOver: () => {\n                    showTooltip({\n                      tooltipTop: yScale(max(d)) ?? 0 + 40,\n                      tooltipLeft: xScale(x(d)) + constrainedWidth + 5,\n                      tooltipData: {\n                        max: max(d),\n                        name: x(d)\n                      }\n                    });\n                  },\n                  onMouseLeave: () => {\n                    hideTooltip();\n                  }\n                },\n                boxProps: {\n                  onMouseOver: () => {\n                    showTooltip({\n                      tooltipTop: yScale(median(d)) ?? 0 + 40,\n                      tooltipLeft: xScale(x(d)) + constrainedWidth + 5,\n                      tooltipData: { ...d.boxPlot,\n                        name: x(d)\n                      }\n                    });\n                  },\n                  onMouseLeave: () => {\n                    hideTooltip();\n                  }\n                },\n                medianProps: {\n                  style: {\n                    stroke: \"rgba(249, 129, 16, 0.667)\"\n                  },\n                  onMouseOver: () => {\n                    showTooltip({\n                      tooltipTop: yScale(median(d)) ?? 0 + 40,\n                      tooltipLeft: xScale(x(d)) + constrainedWidth + 5,\n                      tooltipData: {\n                        median: median(d),\n                        name: x(d)\n                      }\n                    });\n                  },\n                  onMouseLeave: () => {\n                    hideTooltip();\n                  }\n                },\n                outlierProps: {\n                  onMouseOver: ({\n                    target\n                  }) => {\n                    console.log(target);\n                    showTooltip({\n                      tooltipTop: yScale(median(d)) ?? 0 + 40,\n                      tooltipLeft: xScale(x(d)) + constrainedWidth + 5,\n                      tooltipData: {\n                        median: median(d),\n                        name: x(d)\n                      }\n                    });\n                  },\n                  onMouseLeave: () => {\n                    hideTooltip();\n                  }\n                }\n              }, void 0)]\n            }, i))\n          }, void 0)]\n        }), void 0), tooltipOpen && tooltipData && _jsxs(Tooltip, Object.assign({\n          top: tooltipTop,\n          left: tooltipLeft,\n          style: { ...defaultTooltipStyles,\n            backgroundColor: \"#283238\",\n            color: \"white\"\n          }\n        }, {\n          children: [_jsx(\"div\", {\n            children: _jsx(\"strong\", {\n              children: tooltipData.name\n            }, void 0)\n          }, void 0), _jsxs(\"div\", Object.assign({\n            style: {\n              marginTop: \"5px\",\n              fontSize: \"12px\"\n            }\n          }, {\n            children: [tooltipData.max && _jsxs(\"div\", {\n              children: [\"max: \", tooltipData.max]\n            }, void 0), tooltipData.thirdQuartile && _jsxs(\"div\", {\n              children: [\"third quartile: \", tooltipData.thirdQuartile]\n            }, void 0), tooltipData.median && _jsxs(\"div\", {\n              children: [\"median: \", tooltipData.median]\n            }, void 0), tooltipData.firstQuartile && _jsxs(\"div\", {\n              children: [\"first quartile: \", tooltipData.firstQuartile]\n            }, void 0), tooltipData.min && _jsxs(\"div\", {\n              children: [\"min: \", tooltipData.min]\n            }, void 0)]\n          }), void 0)]\n        }), void 0)]\n      }), void 0);\n    }\n  }, void 0);\n});","map":{"version":3,"sources":["../../src/charts/BoxPlot.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Group } from \"@visx/group\";\nimport { ViolinPlot, BoxPlot } from \"@visx/stats\";\nimport { scaleBand, scaleLinear } from \"@visx/scale\";\nimport genStats from \"@visx/mock-data/lib/generators/genStats\";\nimport { withTooltip, Tooltip, defaultStyles as defaultTooltipStyles } from \"@visx/tooltip\";\nimport { PatternLines } from \"@visx/pattern\";\nimport { AnimatedAxis } from \"@visx/react-spring\";\nimport { Orientation } from \"@visx/axis\";\nimport { ParentSize } from \"@visx/responsive\";\nconst data = genStats(4);\nconsole.log(data.flatMap(d => d.boxPlot.outliers).sort((a, b) => a - b));\nconst x = (d) => d.boxPlot.x;\nconst min = (d) => d.boxPlot.min;\nconst max = (d) => d.boxPlot.max;\nconst median = (d) => d.boxPlot.median;\nconst firstQuartile = (d) => d.boxPlot.firstQuartile;\nconst thirdQuartile = (d) => d.boxPlot.thirdQuartile;\nconst outliers = (d) => d.boxPlot.outliers;\nexport default withTooltip(({ tooltipOpen, tooltipLeft, tooltipTop, tooltipData, showTooltip, hideTooltip }) => {\n    return (_jsx(ParentSize, { children: parent => {\n            const xMax = parent.width;\n            const yMax = parent.height - 100;\n            const xScale = scaleBand({\n                range: [0, xMax],\n                round: true,\n                domain: data.map(x),\n                padding: 0.8,\n            });\n            const values = data.reduce((allValues, { boxPlot }) => {\n                allValues.push(boxPlot.max, boxPlot.min, ...boxPlot.outliers);\n                return allValues;\n            }, []);\n            const minYValue = Math.min(...values);\n            const maxYValue = Math.max(...values);\n            const yScale = scaleLinear({\n                range: [yMax, 0],\n                round: true,\n                domain: [minYValue, maxYValue],\n                clamp: true,\n                nice: true\n            });\n            const boxWidth = xScale.bandwidth();\n            const constrainedWidth = boxWidth;\n            return (_jsxs(\"div\", Object.assign({ style: { position: \"relative\", padding: 20 } }, { children: [_jsxs(\"svg\", Object.assign({ width: parent.width, height: parent.height, style: { paddingTop: 10 } }, { children: [_jsx(PatternLines, { id: \"hViolinLines\", height: 3, width: 3, stroke: \"rgba(239, 121, 11, 0.325)\", strokeWidth: 1, orientation: [\"horizontal\"] }, void 0),\n                            _jsx(AnimatedAxis, { orientation: Orientation.bottom, scale: xScale, top: yMax, animationTrajectory: \"outside\" }, void 0),\n                            _jsx(AnimatedAxis, { orientation: Orientation.left, scale: yScale, left: 20, numTicks: 6, tickLabelProps: () => {\n                                    return {\n                                        verticalAnchor: \"middle\",\n                                        textAnchor: \"end\",\n                                        fontSize: 10\n                                    };\n                                }, animationTrajectory: \"outside\" }, void 0),\n                            _jsx(Group, { children: data.map((d, i) => (_jsxs(\"g\", { children: [_jsx(ViolinPlot, { data: d.binData, stroke: \"rgba(239, 121, 11, 0.325)\", left: xScale(x(d)), width: constrainedWidth, valueScale: yScale, fill: \"url(#hViolinLines)\" }, void 0),\n                                        _jsx(BoxPlot, { min: min(d), max: max(d), left: xScale(x(d)) + constrainedWidth * 0.25, firstQuartile: firstQuartile(d), thirdQuartile: thirdQuartile(d), median: median(d), boxWidth: constrainedWidth * 0.5, fill: \"rgba(239, 123, 11, 0.5)\", fillOpacity: 0.3, stroke: \"rgba(239, 123, 11, 0.5)\", strokeWidth: 2, valueScale: yScale, outliers: outliers(d), minProps: {\n                                                onMouseOver: () => {\n                                                    showTooltip({\n                                                        tooltipTop: yScale(min(d)) ?? 0 + 40,\n                                                        tooltipLeft: xScale(x(d)) + constrainedWidth + 5,\n                                                        tooltipData: {\n                                                            min: min(d),\n                                                            name: x(d)\n                                                        }\n                                                    });\n                                                },\n                                                onMouseLeave: () => {\n                                                    hideTooltip();\n                                                }\n                                            }, maxProps: {\n                                                onMouseOver: () => {\n                                                    showTooltip({\n                                                        tooltipTop: yScale(max(d)) ?? 0 + 40,\n                                                        tooltipLeft: xScale(x(d)) + constrainedWidth + 5,\n                                                        tooltipData: {\n                                                            max: max(d),\n                                                            name: x(d)\n                                                        }\n                                                    });\n                                                },\n                                                onMouseLeave: () => {\n                                                    hideTooltip();\n                                                }\n                                            }, boxProps: {\n                                                onMouseOver: () => {\n                                                    showTooltip({\n                                                        tooltipTop: yScale(median(d)) ?? 0 + 40,\n                                                        tooltipLeft: xScale(x(d)) + constrainedWidth + 5,\n                                                        tooltipData: {\n                                                            ...d.boxPlot,\n                                                            name: x(d)\n                                                        }\n                                                    });\n                                                },\n                                                onMouseLeave: () => {\n                                                    hideTooltip();\n                                                }\n                                            }, medianProps: {\n                                                style: {\n                                                    stroke: \"rgba(249, 129, 16, 0.667)\"\n                                                },\n                                                onMouseOver: () => {\n                                                    showTooltip({\n                                                        tooltipTop: yScale(median(d)) ?? 0 + 40,\n                                                        tooltipLeft: xScale(x(d)) + constrainedWidth + 5,\n                                                        tooltipData: {\n                                                            median: median(d),\n                                                            name: x(d)\n                                                        }\n                                                    });\n                                                },\n                                                onMouseLeave: () => {\n                                                    hideTooltip();\n                                                }\n                                            }, outlierProps: {\n                                                onMouseOver: ({ target }) => {\n                                                    console.log(target);\n                                                    showTooltip({\n                                                        tooltipTop: yScale(median(d)) ?? 0 + 40,\n                                                        tooltipLeft: xScale(x(d)) + constrainedWidth + 5,\n                                                        tooltipData: {\n                                                            median: median(d),\n                                                            name: x(d)\n                                                        }\n                                                    });\n                                                },\n                                                onMouseLeave: () => {\n                                                    hideTooltip();\n                                                }\n                                            } }, void 0)] }, i))) }, void 0)] }), void 0),\n                    tooltipOpen && tooltipData && (_jsxs(Tooltip, Object.assign({ top: tooltipTop, left: tooltipLeft, style: {\n                            ...defaultTooltipStyles,\n                            backgroundColor: \"#283238\",\n                            color: \"white\"\n                        } }, { children: [_jsx(\"div\", { children: _jsx(\"strong\", { children: tooltipData.name }, void 0) }, void 0),\n                            _jsxs(\"div\", Object.assign({ style: { marginTop: \"5px\", fontSize: \"12px\" } }, { children: [tooltipData.max && _jsxs(\"div\", { children: [\"max: \", tooltipData.max] }, void 0),\n                                    tooltipData.thirdQuartile && (_jsxs(\"div\", { children: [\"third quartile: \", tooltipData.thirdQuartile] }, void 0)),\n                                    tooltipData.median && (_jsxs(\"div\", { children: [\"median: \", tooltipData.median] }, void 0)),\n                                    tooltipData.firstQuartile && (_jsxs(\"div\", { children: [\"first quartile: \", tooltipData.firstQuartile] }, void 0)),\n                                    tooltipData.min && _jsxs(\"div\", { children: [\"min: \", tooltipData.min] }, void 0)] }), void 0)] }), void 0))] }), void 0));\n        } }, void 0));\n});\n//# sourceMappingURL=BoxPlot.js.map"]},"metadata":{},"sourceType":"module"}