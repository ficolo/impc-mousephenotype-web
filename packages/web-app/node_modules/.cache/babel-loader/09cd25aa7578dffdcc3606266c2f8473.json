{"ast":null,"code":"import _pt from \"prop-types\";\nimport React from 'react';\nimport cx from 'classnames';\nimport Pattern from './Pattern';\nexport default function Path(_ref) {\n  var id = _ref.id,\n      width = _ref.width,\n      height = _ref.height,\n      path = _ref.path,\n      _ref$fill = _ref.fill,\n      fill = _ref$fill === void 0 ? 'transparent' : _ref$fill,\n      stroke = _ref.stroke,\n      strokeWidth = _ref.strokeWidth,\n      strokeDasharray = _ref.strokeDasharray,\n      _ref$strokeLinecap = _ref.strokeLinecap,\n      strokeLinecap = _ref$strokeLinecap === void 0 ? 'square' : _ref$strokeLinecap,\n      _ref$shapeRendering = _ref.shapeRendering,\n      shapeRendering = _ref$shapeRendering === void 0 ? 'auto' : _ref$shapeRendering,\n      background = _ref.background,\n      className = _ref.className;\n  return /*#__PURE__*/React.createElement(Pattern, {\n    id: id,\n    width: width,\n    height: height\n  }, !!background && /*#__PURE__*/React.createElement(\"rect\", {\n    width: width,\n    height: height,\n    fill: background\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: cx('visx-pattern-path', className),\n    d: path,\n    fill: fill,\n    stroke: stroke,\n    strokeWidth: strokeWidth,\n    strokeDasharray: strokeDasharray,\n    strokeLinecap: strokeLinecap,\n    shapeRendering: shapeRendering\n  }));\n}\nPath.propTypes = {\n  id: _pt.string.isRequired,\n  width: _pt.number.isRequired,\n  height: _pt.number.isRequired,\n  path: _pt.string,\n  fill: _pt.string,\n  className: _pt.string,\n  background: _pt.string,\n  stroke: _pt.string,\n  strokeWidth: _pt.oneOfType([_pt.number, _pt.string]),\n  strokeDasharray: _pt.oneOfType([_pt.string, _pt.number]),\n  strokeLinecap: _pt.oneOf(['square', 'butt', 'round', 'inherit']),\n  shapeRendering: _pt.oneOfType([_pt.string, _pt.number])\n};","map":{"version":3,"sources":["/Users/federico/git/test/impc-mousephenotype-web/node_modules/@visx/pattern/esm/patterns/Path.js"],"names":["_pt","React","cx","Pattern","Path","_ref","id","width","height","path","_ref$fill","fill","stroke","strokeWidth","strokeDasharray","_ref$strokeLinecap","strokeLinecap","_ref$shapeRendering","shapeRendering","background","className","createElement","d","propTypes","string","isRequired","number","oneOfType","oneOf"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\nimport React from 'react';\nimport cx from 'classnames';\nimport Pattern from './Pattern';\nexport default function Path(_ref) {\n  var id = _ref.id,\n      width = _ref.width,\n      height = _ref.height,\n      path = _ref.path,\n      _ref$fill = _ref.fill,\n      fill = _ref$fill === void 0 ? 'transparent' : _ref$fill,\n      stroke = _ref.stroke,\n      strokeWidth = _ref.strokeWidth,\n      strokeDasharray = _ref.strokeDasharray,\n      _ref$strokeLinecap = _ref.strokeLinecap,\n      strokeLinecap = _ref$strokeLinecap === void 0 ? 'square' : _ref$strokeLinecap,\n      _ref$shapeRendering = _ref.shapeRendering,\n      shapeRendering = _ref$shapeRendering === void 0 ? 'auto' : _ref$shapeRendering,\n      background = _ref.background,\n      className = _ref.className;\n  return /*#__PURE__*/React.createElement(Pattern, {\n    id: id,\n    width: width,\n    height: height\n  }, !!background && /*#__PURE__*/React.createElement(\"rect\", {\n    width: width,\n    height: height,\n    fill: background\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: cx('visx-pattern-path', className),\n    d: path,\n    fill: fill,\n    stroke: stroke,\n    strokeWidth: strokeWidth,\n    strokeDasharray: strokeDasharray,\n    strokeLinecap: strokeLinecap,\n    shapeRendering: shapeRendering\n  }));\n}\nPath.propTypes = {\n  id: _pt.string.isRequired,\n  width: _pt.number.isRequired,\n  height: _pt.number.isRequired,\n  path: _pt.string,\n  fill: _pt.string,\n  className: _pt.string,\n  background: _pt.string,\n  stroke: _pt.string,\n  strokeWidth: _pt.oneOfType([_pt.number, _pt.string]),\n  strokeDasharray: _pt.oneOfType([_pt.string, _pt.number]),\n  strokeLinecap: _pt.oneOf(['square', 'butt', 'round', 'inherit']),\n  shapeRendering: _pt.oneOfType([_pt.string, _pt.number])\n};"]},"metadata":{},"sourceType":"module"}