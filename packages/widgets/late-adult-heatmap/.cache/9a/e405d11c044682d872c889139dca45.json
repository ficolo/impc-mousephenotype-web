{"id":"c3od","dependencies":[{"name":"/Users/federico/git/test/impc-mousephenotype-web/packages/widgets/late-adult-heatmap/package.json","includedInParent":true,"mtime":1614276654229},{"name":"/Users/federico/git/test/impc-mousephenotype-web/node_modules/lodash/package.json","includedInParent":true,"mtime":1614024774206},{"name":"./_trimmedEndIndex","loc":{"line":1,"column":30},"parent":"/Users/federico/git/test/impc-mousephenotype-web/node_modules/lodash/_baseTrim.js","resolved":"/Users/federico/git/test/impc-mousephenotype-web/node_modules/lodash/_trimmedEndIndex.js"}],"generated":{"js":"var e=require(\"./_trimmedEndIndex\"),r=/^\\s+/;function n(n){return n?n.slice(0,e(n)+1).replace(r,\"\"):n}module.exports=n;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":1,"column":0},"generated":{"line":1,"column":4}},{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":1,"column":0},"generated":{"line":1,"column":6}},{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":1,"column":0},"generated":{"line":1,"column":14}},{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":4,"column":0},"generated":{"line":1,"column":36}},{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":4,"column":0},"generated":{"line":1,"column":38}},{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":13,"column":0},"generated":{"line":1,"column":45}},{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":13,"column":0},"generated":{"line":1,"column":54}},{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":13,"column":0},"generated":{"line":1,"column":56}},{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":14,"column":0},"generated":{"line":1,"column":59}},{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":14,"column":0},"generated":{"line":1,"column":66}},{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":15,"column":0},"generated":{"line":1,"column":68}},{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":15,"column":0},"generated":{"line":1,"column":70}},{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":15,"column":0},"generated":{"line":1,"column":76}},{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":15,"column":0},"generated":{"line":1,"column":78}},{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":15,"column":0},"generated":{"line":1,"column":80}},{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":15,"column":0},"generated":{"line":1,"column":83}},{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":15,"column":0},"generated":{"line":1,"column":86}},{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":15,"column":0},"generated":{"line":1,"column":94}},{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":15,"column":0},"generated":{"line":1,"column":96}},{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":16,"column":0},"generated":{"line":1,"column":100}},{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":19,"column":0},"generated":{"line":1,"column":102}},{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":19,"column":0},"generated":{"line":1,"column":109}},{"source":"../../../../node_modules/lodash/_baseTrim.js","original":{"line":19,"column":0},"generated":{"line":1,"column":117}}],"sources":{"../../../../node_modules/lodash/_baseTrim.js":"var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n"},"lineCount":null}},"error":null,"hash":"8f32ff229d27c21e8acf85d06d86bc5f","cacheData":{"env":{}}}